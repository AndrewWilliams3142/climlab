{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Preconfigured Energy Balance Models"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this document the basic use of climlab's preconfigured EBM class is shown. \n",
    "\n",
    "Contents are how to\n",
    "\n",
    "  * setup an EBM model\n",
    "  * show and access subprocesses\n",
    "  * integrate the model\n",
    "  * access and plot various model variables\n",
    "  * calculate the global mean of the temperature"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# import header\n",
    "\n",
    "%matplotlib inline\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import climlab\n",
    "from climlab import constants as const\n",
    "from climlab.domain.field import global_mean"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Model Creation"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The regular path for the EBM class is ``climlab.model.ebm.EBM`` but it can also be accessed through ``climlab.EBM``\n",
    "\n",
    "An EBM model instance is created through"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# model creation\n",
    "ebm_model = climlab.EBM()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "By default many parameters are set during initialization:\n",
    "\n",
    "``num_lat=90, S0=const.S0, A=210., B=2., D=0.55, water_depth=10., Tf=-10, a0=0.3, a2=0.078, ai=0.62, timestep=const.seconds_per_year/90., T0=12., T2=-40``\n",
    "\n",
    "For further details see the climlab documentation.\n",
    "\n",
    "Many of the input parameters are stored in the following dictionary:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'A': 210.0,\n",
       " 'B': 2.0,\n",
       " 'D': 0.555,\n",
       " 'S0': 1365.2,\n",
       " 'Tf': -10.0,\n",
       " 'a0': 0.3,\n",
       " 'a2': 0.078,\n",
       " 'ai': 0.62,\n",
       " 'timestep': 350632.51200000005,\n",
       " 'water_depth': 10.0}"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# print model parameters\n",
    "ebm_model.param"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The model consists of one state variable (surface temperature) and a couple of defined subprocesses."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "climlab Process of type <class 'climlab.model.ebm.EBM'>. \n",
      "State variables and domain shapes: \n",
      "  Ts: (90, 1) \n",
      "The subprocess tree: \n",
      "top: <class 'climlab.model.ebm.EBM'>\n",
      "   diffusion: <class 'climlab.dynamics.diffusion.MeridionalDiffusion'>\n",
      "   LW: <class 'climlab.radiation.AplusBT.AplusBT'>\n",
      "   albedo: <class 'climlab.surface.albedo.StepFunctionAlbedo'>\n",
      "      iceline: <class 'climlab.surface.albedo.Iceline'>\n",
      "      cold_albedo: <class 'climlab.surface.albedo.ConstantAlbedo'>\n",
      "      warm_albedo: <class 'climlab.surface.albedo.P2Albedo'>\n",
      "   insolation: <class 'climlab.radiation.insolation.P2Insolation'>\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# print model states and suprocesses\n",
    "print ebm_model"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Model subprocesses"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The subprocesses are stored in a dictionary and can be accessed through"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['diffusion', 'LW', 'albedo', 'insolation']"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# access model subprocesses\n",
    "ebm_model.subprocess.keys()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "So to access the time type of the Longwave Radiation subprocess for example, type:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'explicit'"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# access specific subprocess through dictionary\n",
    "ebm_model.subprocess['LW'].time_type"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Model integration"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The model time dictionary shows information about all the time related content and quantities."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'day_of_year_index': 0,\n",
       " 'days_elapsed': 0,\n",
       " 'days_of_year': array([   0.        ,    4.05824667,    8.11649333,   12.17474   ,\n",
       "          16.23298667,   20.29123333,   24.34948   ,   28.40772667,\n",
       "          32.46597333,   36.52422   ,   40.58246667,   44.64071333,\n",
       "          48.69896   ,   52.75720667,   56.81545333,   60.8737    ,\n",
       "          64.93194667,   68.99019333,   73.04844   ,   77.10668667,\n",
       "          81.16493333,   85.22318   ,   89.28142667,   93.33967333,\n",
       "          97.39792   ,  101.45616667,  105.51441333,  109.57266   ,\n",
       "         113.63090667,  117.68915333,  121.7474    ,  125.80564667,\n",
       "         129.86389333,  133.92214   ,  137.98038667,  142.03863333,\n",
       "         146.09688   ,  150.15512667,  154.21337333,  158.27162   ,\n",
       "         162.32986667,  166.38811333,  170.44636   ,  174.50460667,\n",
       "         178.56285333,  182.6211    ,  186.67934667,  190.73759333,\n",
       "         194.79584   ,  198.85408667,  202.91233333,  206.97058   ,\n",
       "         211.02882667,  215.08707333,  219.14532   ,  223.20356667,\n",
       "         227.26181333,  231.32006   ,  235.37830667,  239.43655333,\n",
       "         243.4948    ,  247.55304667,  251.61129333,  255.66954   ,\n",
       "         259.72778667,  263.78603333,  267.84428   ,  271.90252667,\n",
       "         275.96077333,  280.01902   ,  284.07726667,  288.13551333,\n",
       "         292.19376   ,  296.25200667,  300.31025333,  304.3685    ,\n",
       "         308.42674667,  312.48499333,  316.54324   ,  320.60148667,\n",
       "         324.65973333,  328.71798   ,  332.77622667,  336.83447333,\n",
       "         340.89272   ,  344.95096667,  349.00921333,  353.06746   ,\n",
       "         357.12570667,  361.18395333]),\n",
       " 'num_steps_per_year': 90.0,\n",
       " 'steps': 0,\n",
       " 'timestep': 350632.51200000005,\n",
       " 'years_elapsed': 0}"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# accessing the model time dictionary\n",
    "ebm_model.time"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To integrate the model forward in time different methods are availible: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# integrate model for a single timestep\n",
    "ebm_model.step_forward()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The model time step has increased from 0 to 1:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ebm_model.time['steps']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Integrating for 12 steps, 50.0 days, or 0.136895462792 years.\n",
      "Total elapsed time is 0.144444444444 years.\n"
     ]
    }
   ],
   "source": [
    "# integrate model for a 50 days\n",
    "ebm_model.integrate_days(50.)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Integrating for 90 steps, 365.2422 days, or 1.0 years.\n",
      "Total elapsed time is 1.14444444444 years.\n"
     ]
    }
   ],
   "source": [
    "# integrate model for two years\n",
    "ebm_model.integrate_years(1.)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total elapsed time is 9.14444444444 years.\n"
     ]
    }
   ],
   "source": [
    "# integrate model until solution converges\n",
    "ebm_model.integrate_converge()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "## Plotting model variables"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A couple of interesting model variables are stored in a dictionary named ``diagnostics``. It has following entries:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['ASR', 'OLR', 'icelat', 'net_radiation', 'albedo', 'insolation']"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ebm_model.diagnostics.keys()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "They can be accessed respecively to the keys through ``ebm_model.diagnostics['ASR']``. Most of them can be also accessed directly as model attributes like:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([-70.,  70.])"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ebm_model.icelat"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The following code does the plotting for some model variables."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": false,
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA34AAAJpCAYAAADyjeCDAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzs3XeYU2X2wPHvAVHslLWLYqXjCGtFZVRURFddXbsI1l31\nBwiIDRVRFLBiw7auvWJZUMGCEPuigIgCVoqiNGk2Ouf3x7mBMEzLTJJ7k3s+z3OfTDLJzXnT3nvu\n20RVcc4555xzzjlXuGqEHYBzzjnnnHPOuezyxM8555xzzjnnCpwnfs4555xzzjlX4Dzxc84555xz\nzrkC54mfc84555xzzhU4T/ycc84555xzrsB54udiS0QaichHIrJERKaGHY9zzjnnsktEWovIahHZ\nKbjeVkRWiUi9au5352C/rTITqXOZ54mfiywR+YuIDBaRaSKyVERmi8jbInJ4hp6iH/AHsCewT4b2\nmZagklgVXJbcVonIf8KIKxdEZKOgnB3CjsU551zpROSx4Le6d4nb2wa3VzphEpFHRWRYJe7XJ6Ue\nXCUiP4nIUyKyY1XKUIrURaw/BLZT1QWVfbCIjBaRu0vc/AOwLTAhA/E5lxUbhB2Ac+V4GagNnAN8\nD2wNtAXqV2enIlJLVVcAuwP/VdUfqxtoNWyb8vffgIeC2yS4bUnOI6omERFAVHV1RXfN4HNuoKor\nM7U/55xzayhWF/USkQdUdX6J/2XLV1idXxPYDRgMPA+0yeSTBHXH3AzsRzOxH+eyyVv8XCSJyJbA\nQcCVqppQ1R9VdZyq3qGqL6Tcb5qI9Cjx2HXOxAX36SMij4jIQuBpEVkNtAT6BGcTrwvu219EvhKR\nP4PHDRSRDUvsv4OI/C+4zy8iMjR5HxGpFTzmRxH5Q0TGiMiRZZVTVecmN2BRcNu8lNt/C/a7k4i8\nICILRWR+8JwNU2LqLyKfisj5IjJDRH4TkftFpKaIXCoiM0VknogMKFGWWSJytYg8KyK/B2dVu5S4\nT93gtZsrIotFZKSI7JXy/38G+z5ORCYBy4CGInJA0EL7i4gsEpF3ReSvKbuehh00vBac2Z0c7G+A\niHxaIoZ/isi8Usp7gVg33aUiUkNMbxGZGrw/E0Tk5LJef+ecc5UyGpgOXFfenUSkqYi8JiK/isgc\nEXlGRLYJ/tcH6AQck9Kad0g5u1sZ1IezVfVD4GFgfxHZLOX5zhSRT1Ke7wUR2b5ETO1FZIrYsI53\nsV4+qf9fp+VSROoFcf8Y1CNfikjnlPs/iiWkl6SUYycppauniBwSHC8sEeu1dIeI1Er5/2gRuU9E\nbgrq0Tkicmt5r7Fz1eGJn4uq34PtOBHZKAP76w5MAVoDV2Gtat8AtwHbBZfJ5+0MNAYuAk4F1nRv\nEZH2wFDgTaAVcAhWISa/S48BBwOnAc2Ax4FhItKiqoEHlVwCmI+d6TwQWAi8nVqBAI2Aw4GjgFOw\nCva14PbDgIuBy0Tk6BJP0QsYCxQBNwO3B+VERGoAbwB1gv22Cu77joiktrxuDlwGnBuUexawGfAI\ncACwHzAZGC4imweP2Qdr9TsTez8OCm5XSj+LXPK2xsBxwAlAUdDCeBv22l8ANAFuBx4TkcNK2Z9z\nzrnKWQ1cCfxLRHYp7Q4isi3wLjAR+CtWH22K1Zlgv88vACOBbbC696PKPHmw75OAVcGWVAtLRlsC\nx2A9gp5JedyOwCtYnb0XcA9wSylPkVq/1AbGAR2ApsAg4AEROTT4fzfgY+DRlHL8WHI/QQI6PNhX\nEVY/no7Vs6nOAFZgdeUlwKUicmo5L4dzVaeqvvkWyQ34O/AL1sXkI+BWYN8S95kG9Chx22jg7hL3\nGVrK/r8Arqsghn8C36Rc/wB4uoz77opVSDuWuP0V4N5KlPckYFUpt18ETCxxWy3gV+DY4Hp/YDFQ\nO+U+r2KVUY2U2z4Gbkm5Pgvr7pq67yeBt4K/OwTvwQYl7jMF+L+U12gV0LiC8tXAktcTg+sbYQcT\nHUrcrz/wSSnvw9wS9/kT2DLlti2x1sbWJR57P/Bi2J9n33zzzbd83LAEZ1jw9yjgmeDvtsFvf73g\nel/g7RKPrRv8zv+15L4qeM4+wErgN2ws/urgue6o4HGNg/tuH1y/GfiqxH16B/vaqbRylLHfZ4GH\nUq6vc5wR3LZz8Nytgus3AV+XuE8n7Jimdsp+Pixxn7dSn8s33zK5+Rg/F1mq+oqIvI61oB0AtAd6\nisjVqjqg/EevZ2xl7iQi/8DO5u2OtVjVZN2W8b2xiqs0rbAWrMkikjp+bUOssqyq1kATEfmtxO0b\nY+Mekqaq6tKU63OwCm91idu2LrGf/5W4/jFwdfB3K6y1b+G6RWKjEs+9RFW/Sr1DcIa2H9YqujX2\nWm4M7FSygFU0TVUXp1xvgSXEo0u8/htgiapzzrnquQL4qIzuiK2BtqXUVYrVF5Wqh1N8BxyNtcAd\nj50cLTnBTCusxa8IqIfVwYrVMz9jiWBpdVyZgp4uV2E9Z3bA6rtaWM+bdJT23B9gxwS7A18Gt00s\ncZ+fWb+edi4jPPFzkaaqy4F3gq2fiDwMXC8it6kNyF7N+pOE1GJ9f1T0XCKyH3ZWrw/WLWQRVtlU\ntr99jSCev2JnKlNVZ5KWGljlcTbrl/WXlL9XlPiflnFbOl28a2CthoeV8typSdefpTz2WazC7oLN\ndrYMmz1tw1Lum6qq72kNrHxHYQluquUVPKdzzrkKqOqnIvIyVi/eWOLfNbDhBT1Z/ze85G9yZSxX\n1WnB31NEZE9sgpdzAERkE2wowlvAWdjEKlsB71NxPVOeXtjwkK5YcvY71stkq2rsM1UyOU2qbj3t\nXKV54ufyzRTsc1sb+zGeh/WvB0BEamNn2cZXYd9tgJmquqb/vaRMoBL4DBu38Egpj/8M+0HfTlXf\nrcLzl2U8NnZhrqpWmMBWwf4lrh/A2hay8dgZ1uWq+lOa+z0QOFtV34Q1Yy1Sz2KuxCq4miUeN491\nZzsFa2mtyBes7b5T7hld55xzVXY1Nma7fYnbxwMnAz+o6qr1HmWWs/5vfmX1A74WkbtV9TOsrq8P\n9FbVGQAi0px1k6opwIkl9nNABc/TBnhVVVPHCu6Jja1Pqkw5pmCvR6qDsZOg31fwWOeyws8ouEgK\nZtV6J5ixq4WINAxmZ+wFjFTV34O7jgLODGblaoYlZFWtVL4BdhCRM0RkFxG5CJsoJNVNwMkicqOI\nNBGRZmKzZtZW1W+xQeWPichJwT5ai0hPETmhijGBTRDzG/BfETkoeC3aisggEWlQjf0mtQ1i3F1E\nLsa6t9wR/G84VpkPE5EjglnLDgzKX9Hah98CZ4tIo6A19RlSWgaDA4OZQDsR2UZsJlewMQ/bi8hl\nIrKriPwLW+qiXKq6ELgLuEtEOgaPLRKRi1NnZHPOOVd1qvo98CA2LCLVfdhY6xdEZN+gDmwnIg+K\nyKbBfaYDzUVkTxGpLyKVboBQ1anYRDH9gpuSPUm6BM91DHBDiYc9gM0yPSh4zn9gY8ZLSm2h/AY4\nXETaiEhjEbkXKDmhzXRg36BOLGuJqcFYXXZ/sJ9jsJbDe0oMy3AuZzzxc1H1O9YPvyvWr/5L7Mf+\nKdZNxvpjyd9/sS4f72Mtb6nKWmdondtV9TWs+8qdwOdYy961Je4zApt0pj2WEI0GirHuiWAzgj4K\nDMTO9r2KneGbUX5xy6a2pMNBWL//l7AzrY9g4+UWl/PQyroF2BdbdPYaoFdQToLxgUdik+s8CnyN\nJXANgdkV7Lcj1jXmM+AJbDa1WSXucyk2gcwPBOMuVPVz7H3vEsR0IFCpMZ2q2iu471XY6/QGljRO\nK+9xzjnn0nIja3ttAKCqs7DWslXACKzevgdYiiVoYEsyTMHG+83Fft/TcTvQXkT2V9VfsMlSjgcm\nYfV199Q7q63TeyI2BGAClqxeUcp+U48H+gGfYCc+E9jxyFMl7n8b1uo3GZgrIsmx66mvx8/YGMUi\nrB78N/A0645TzOY6iM6tR1Sj8ZkLpux/D+uXvQE2C19fEamLLdi5M3aG5ZQSEzo456pIRGYBN6rq\n4LBjcc6ZYHKJsVjX8+PKqwdF5CpsmviVQDdVfSucqJ1zzkVdZFr8VHUZcKiq7o2dHTlaRPbF1o0Z\nqaqNsJadq0IM0znnnMu2blhLQlKp9aCINMW6ZjfBWhYGl5jR1jnnnFsjMokfgKomx/9shLX6KdaE\n/3hw++PYYs3OucyIRpO/cw5YMwlSB6xbWFJZ9eBxwHOqulJVp2PjavfNUajOOefyTKRm9Qy6t4zD\n1nu5L5g2eBtVnQOgqrNFxNc2cS5DVHX7sGNwzq3jTmwSqy1TbiurHtyBddck+ym4zTnnnFtP1Fr8\nVgddPXfEZktqxvotEt5C4ZxzruAEs/7NUdUJrL8OWiqvB51zzqUtUi1+Sar6q4gksJkT5yRb/URk\nW2wWqPWIiFeEzjkXI6paaOPZ2gDHiUgHbNbezUXkSWB2GfXgT0Dqki47Bretx+tI55yLj7Lqx8i0\n+InIX5LreInIxsAR2JS/w7Ap8sGm7R1a1j5UNXZbp06dQo/By++vgZffy5/rrRCp6tWqupOq7oot\nWzNKVTtiy8J0Du6WWg8OA04TkQ1FZBdgd2wa+rL2H7strt8PL7+X38sf3/KXJ0otftsBjwfj/GoA\nz6vqcBH5H7YY6LnYWminhBlk1DRs2DDsEEIV9/KDvwZe/oZhh+CybwCl1IOqOllEXsBmAF0BXKwV\n1foxE/fvh5e/YdghhMrL3zDsECInMomfqn4BtCrl9gVAu9xH5JxzzoVDVd8F3g3+LrMeVNX+QP8c\nhuaccy5PRaarp6uaOnXqhB1CqOJefvDXwMsf7/I7V564fz+8/F7+OIt7+UvjiV+eKyoqCjuEUMW9\n/OCvgZc/3uV3rjxx/354+b38cRb38pdGCmU4gIj40AbnnIsJEUELb1bPrPE60jnn4qG8+tFb/Jxz\nzjnnnHOuwHnil+cSiUTYIYQqDuWfORNeew3uuw8uvxxOPRXatoWDD7atRYsEhxwC//gH9OwJd98N\nQ4fC1KkQhxP8cfgMlCfu5XeuPHH/fnj5E2GHECovfyLsECInMrN6OufM9OkwciS8/z689x78/ju0\nbg0NG8LOO0NREWy/PdSsaff/7DPYay+YPRtmzICvv4a33oLx40HEksNDDoHDD4dGjcIsmXPOOeec\nC4uP8XMuAubPhyFD4KmnLHE78khL1g45BBo3tgQuXarW6pdMIN94A7bbDs46C047zf52Ll/5GL/0\neB3pnHPxUF796ImfcyH6+GO49VZ45x04+mg480w46ijYcMPMP9eqVTB6tCWXQ4fCfvtBjx5wxBFV\nSyydC5MnfunxOtI55+LBJ3cpYHHvv5yP5Ve1rpjFxXDGGdCuHfz4Izz3HPztb+knfZV9DWrWtOd6\n7DH46Sc4/XTo3h322QdefhlWr063JNGQj5+BTIp7+Z0rT9y/H17+RNghhMrLnwg7hMjxxM+5HBo1\nyhKt7t3h/PPh22/h4othiy1yG8cmm0CnTvDFF3DNNTBgADRrZgmgNwo455xzzhUe7+rpXA788IPN\nuDl2LNxyC5x0EtSI0GmXZCtkjx42cczdd0OTJmFH5VzZvKtneryOdM65ePCuns6FZOlSuPFG2Htv\naN4cJk+Gk0+OVtIHNsbvqKNgwgQ49libVKZnT/j117Ajc84555xzmRCxw0+Xrrj3X45y+cePh1at\nbLmFceOgTx/YeOPMP08mX4NataBbN5g0CRYuhBYtIMIvMRDtz0AuxL38zpUn7t8PL38i7BBC5eVP\nhB1C5Hji51yGrVplY+bat7fxcy+/bGvw5ZOtt4b//Afuv98moLn8cli2LOyonHPOOedcVfkYP+cy\naPp0OPts68r5xBOw005hR1R98+bBhRfCtGm2FETz5mFH5JyP8UuX15HOORcPPsbPuRx4801bG+/Y\nY21dvkJI+gC22spaLbt0gUMPhWefDTsi55xzzjmXLk/88lzc+y9Hofyqtgh7584wZIh1i6xZM3fP\nn4vXQATOOw9GjoTeva2Mq1Zl/WkrJQqfgTDFvfzOlSfu3w8vfyLsEELl5U+EHULkeOLnXDX8+Sec\neSY8/zx88onNhlnI9toLPv3UJq455hibAMY555xzzkWfj/FzropmzbJunU2bwkMPZWfGzqhaudJa\n/V59FYYPhz32CDsiFzc+xi89Xkc651w8+Bg/5zLs22+hTRs48USbxCVOSR/ABhvAHXfAFVdA27a2\nXIVzzjnnnIsuT/zyXNz7L4dR/nHjLNm5+mob7yYhtzmE+Rk4/3wYPBiOPtomtAmDfwcSYYfgXGTF\n/fvh5U+EHUKovPyJsEOIHE/8nEvDO+9YkjN4sCU9Dk44AV580db7e+GFsKNxzjnnnHOl8TF+zlXS\n0KFwwQU2c2fbtmFHEz0TJ0KHDtCnj71OzmWTj/FLj9eRzjkXD+XVjxvkOhjn8tGwYbaI+YgR0Lp1\n2NFEU8uWkEjYWn81atjyD84555xzLhq8q2eei3v/5VyU/7XXrFvna69FM+mL0mdg991h1Chr9Xv0\n0dw8Z5TKH4a4l9+58sT9++HlT4QdQqi8/ImwQ4gcb/FzrhzDh8O551rSt88+YUeTH/bYw8ZCHn64\ntfx16hR2RM4555xzzsf4OVeGN9+Ejh1trbr99gs7mvzz1VeW/A0cCGedFXY0rtD4GL/0eB3pnHPx\n4GP8nEvT//5nycrQoZ70VVXjxjBypI35q1sXjjkm7Iicc8455+LLx/jlubj3X85G+adMsSUKHnsM\nDjww47vPuCh/Bpo0seS5c2f4+OPsPEeUy58LcS+/c+WJ+/fDy58IO4RQefkTYYcQOZ74OZdi5kxo\n3966J3oLVWbstx888QT8/e8weXLY0TjnnHPOxZOP8XMusGABHHywtU716hV2NIXnySfhmmvggw+g\nQYOwo3H5zsf4pcfrSOeciwcf4+dcBZYuheOPt9a+yy4LO5rC1LEjzJ1rr/FHH8GWW4YdkXPOOedc\nfHhXzzwX9/7LmSi/KlxwAWyzDdx6K0ietSHk02egZ0847DA45RRYuTIz+8yn8mdD3MvvXHni/v0o\nuPIrMAcYC7wC3ANcAVwInAZ0AA4C9rUt0Thhfx8AHAWcDJwP9ARuB14APgJ+AFbnsiC5UXDvf5ri\nXv7SeIufi73+/W1Cl/fes3XnXHbdeScceyx07w733BN2NM5Fh4hsBLwHbIjVzy+qal8RqQs8D+wM\nTAdOUdXFwWOuAs4FVgLdVPWtMGJ3LuP+wBK88cBkYFJwuQGwE7Aj0ADYAdgF2BLYItg2CvYxDmgN\nrAB+A34FFgMLgR+Bj4GZWOK3GGgENAOaAnsB+wH1s1pK53LKx/i5WHvpJbj0UhgzBrbfPuxo4mPx\nYpsx9eKL4ZJLwo7G5aNCHeMnIpuo6p8iUhP4EOgKnATMV9VbROQKoK6qXikiTYGngX2ww+CRwB6l\nVYZeR7rIm419gj8E/gd8A7TEErdkMtYU2CpLz/8r8BWWYE4CPgM+BbYF9gcOBNoBuwEF98vjCkl5\n9aMnfi62xo2z8WZvvgmtWoUdTfxMnQpt2sDjj8ORR4Ydjcs3hZr4JYnIJljr30XAk0BbVZ0jItsC\nCVVtLCJXAqqqA4PHjACuV9UxpezP60gXLcuBd4E3gbexVrdDgbZYolXE2pa7sKzCWhn/B3yAxbkR\ncGTKtnlo0TlXqvLqR+/Ylufi3n+5quWfNcvW6nvwwfxP+vL1M7DrrvDCC3DWWfDVV1XfT76WP1Pi\nXv5CIyI1ROQzrP3jbVX9FNhGVecAqOpsYOvg7jtgHdaSfgpuc4G4fz8iV/4/sbF5HbGWtOuwrpkP\nAPOAl4FuWBfLDCR91S5/TaAFcAHwOPYNew1oDDyMfdv+BjwGzK/eU2VD5N7/HIt7+UvjiZ+LneXL\n4eSTbUKXE08MO5p4O/hguPlmex9++y3saJwLn6quVtW9sa6b+4pIM2xKi3XulvvInKuiVcBbwFnA\ndsB92GQrX2Bj7K4LrufDrBOCdTvtDryBnXY5HUsGdwWOBp4DloQVoHPl866eLna6doVp02DoUJ/M\nJSouuAAWLoQhQ/JvVlUXjkLv6gkgItdibSTnA8UpXT1Hq2qTUrp6vgH0KaurZ6dOnWjYsCEAderU\noaioiOLiYmDtmXG/7tczdv0HKJ5UDE9BYrMEHAXF1xbDVhGJL9PXl0DxwmJ4HBIfJeAQKO5dDAdA\n4t0IxOfXC/b6oEGDmDBhwprf9759+/oYP+cAnnoK+vaFTz+FOnXCjsYlLV0KhxxiLbG9eoUdjcsH\nhZj4ichfgBWqulhENsZGPw3ARj0tUNWBZUzush/W6extfHIXF6aVwDBgMPAl0CnYmoYZVAh+wr6Z\n/wY2AS4GzgA2CzMoFxc+xq+AJbP+uEqn/J9/bksIvPxyYSV9hfAZqF3bZli94w4YNSq9xxZC+asj\n7uUvMNsBo0VkAjAGeFNVhwMDgSNE5GvgcCwZRFUnYyuRTQaGAxd7dreuuH8/clb++UA/oCFwJ3Ae\nMAP75IaY9IX2/u8AXI7NEnobMAJbjKUrMDV3YfjnPxF2CJGTDz2qnau2hQttHNndd0OLFmFH40rT\noAE8/TSceaYtr7HTTmFH5FxuqeoXwHrTTanqAmwi+dIe0x/on+XQnCvdNOAO4CngROz0Q8tQI4qW\nGtg3tx02HnAwtqD8YUAvbCEW53IoMl09RWRH4AlgG2A18LCq3l3ewrUlHu8nOl2pVG0Gz4YN4a67\nwo7GVWTgQBt/+e67UKtW2NG4qCrErp7Z5HWky6gvgJuwdfcuwFqytgs1ovzxG9YF9E5sTcDeWDu+\n/5q5DMmLdfyCAevbquoEEdkMGAccD5xDKQvXlvJ4r9Rcqe66y8b2ffghbLhh2NG4iqxeDcceCy1b\nwoABYUfjosoTv/R4HekyYiJwA7amXU/gX/g6dlW1AmvW6AfUB67HWgb9V81VU16M8VPV2ao6Ifj7\nd2AKNp318djqKQSXJ4QTYTTFvf9yReUfOxZuugmef75wk75C+wzUqGGLuj/9NIwYUfH9C6386Yp7\n+Z0rT9y/Hxkr/5fAScBRwIHYOLVeRD7pi/T7Xwtb4mIScAnWatoGa0XNkEiXPwfiXv7SRCbxSyUi\nDYEi4H+UvXCtc+VavBhOPRXuu88WC3f5Y6utLPE75xz46aewo3HOuZiagc3KeTiW8H0P9MBmqnSZ\nUROb8fNLoAtwEXAEMDbMoFyhikxXz6Sgm2cCuFFVh4rIAlWtl/L/+apav5THeTcWt4YqnHYa1K8P\ngweHHY2rqn794O234Z13YAOfisql8K6e6fE60qXlF2wM3xNYa9RlwBahRhQfK4BHsC61B2Hvwx6h\nRuTyTHn1Y6QOpURkA+BF4ElVHRrcPEdEtklZuHZuWY/v3LmzL07r1wHo2TPBuHHw5ZfRiMevV+36\nVVcVk0jAeeclOOec8OPx6+FdnzBhAosWLQJg+vTpOOeyYDlwD7ZgyKnYQiHbhBpR/NTCxk52BO4G\nDgj+vg6oG2JcriBEqsVPRJ4AflHVHim3DaSUhWtLeWwsz2YmEok1B0dxVFr5v/oKDj4YPvgAGjUK\nJ65cKvTPwOzZsPfeMGQIHHTQ+v8v9PJXJK7l9xa/9HgdGU+VLr8CQ7Fxe42wtecaZzOy3CiI938u\nlvS9AlwL/BNLDiuhIMpfDXEtf15M7iIibYAzgcNE5DMRGS8i7Slj4VrnSrN8ua0D169fPJK+ONh2\nW3jwQejY0cZtOuecy6BJ2GyS1wD3Aa9REElfwdgaeACb9OW/wF5kdAIYFy+RavGrjriezXTruvJK\nmDIF/vtfEG8LKCj//CcsWQJPPBF2JC4KvMUvPV5HuvX8BvTF5kvvg3UvjNQAILceBYYBl2KLv9+B\nzX/vXIq8WMevurxSc4kEnHEGfP65zQrpCssff0CrVnDDDTZbq4s3T/zS43WkW0OBZ7FunUdh/ajy\naL701cAS4E/gj+ByOTYnyorg75KfdMF6Rya3DYGNgU2xCUo3wSbXzBtLsPftPmzinR5YoZzDE7+C\nFtf+y0nJ8i9cCEVF8MADcPTRYUeVW3H6DIwdCx06wLhx0KCB3Ran8pcmruX3xC89XkfG03rl/xZb\nLmA+MBibOCREGoTyMzAr2OZik4omt/nA4pTtD6A2a5O2jYGNWDexS45jWphIULe4mNXAStZNDksm\nj7WBLVO2esBfgm2rYNsW2B7YDsuVQ08Wvwe6YesqPggcvO6//fMfz/LnzayezlXVJZfAccfFL+mL\nm7/+FS69FM4+25Z4qBGZUcrOORdhy4BbgLuA3th6cTk4AlyFJXXfY7nJNOCHlG0msBmWSCW3rbEk\nq1FwWQ9LxOoEl5tR+QkqEkBxJe6nWPK3GFgUXC5gbfI5D8uZZ2PJ6c/AQmzC051StobAbsCuwfWs\nN8LtBrwKvAycDhyNzYxRr7wHuTjzFj+X955/Hvr0gc8+g403Djsal22rVkHbtvCPf1gS6OLJW/zS\n43VkjH0AXICtBXcvlpFk2GJsjpivgK9TtmlYDpJMhnYBdmZtorQj1mKXj1ZgCWAyiZ0BTGdtkvsz\nsAOWwKZuTbGEMeM/Xr9iSf0Q4HZsUXj/hYwl7+rpCtbs2bDXXjBsGOy3X9jRuFz57jvYf3/48EOf\nvTWuPPFLj9eRMfQrcBU2E+TdwIlUOxFYBkwBPg+2ScG2CGgSbI2APYPL3bHumHG0HEsEUxPhr7Cl\nEQVLAJsDLYCi4HKzTDzxJ8D5QANsNtAGmdipyyd5sZyDq5rkQsdxpAonnZTg/PPjnfTF8TOw++7Q\nty906gTvvJMIO5xQxfH9d66yYvv9GA60gMT0BHwJnETaSd/vwIdYztgJaIl1tzwTeBNrteqKNSj+\nCnwKPIE1Op0c3D/spC/M939DLAH+Gzb/ysPA+1jX0S+xiVQbA+Ow13FrrFH2FGzelrex8Y1p2xcY\nC+wPieYJuB+bESeGYvv9L4eP8XN568knYdYsuO66sCNxYbjoInj5Zevqe/jhYUfjnHMRsACb7OND\n4BHsKK8jWuAXAAAgAElEQVRuxQ9bAXyBNRYlt6lAM6A1cBCWnDTDJkFxVSfYJDHbYotTJ60EvgE+\nw5LBfsHf9bFcbl9gP6AVlUioN8QWe2+ATfryLPAfrAnWxZp39XR5aeZM2HtvePttm83TxdOMGTbh\ny+jR0Lx52NG4XPKununxOjIGhmEzdv4DuBmb9rIMc4GPgY+Cy/HYxCT7pmzN8RUCwrYaSwY/ZW1C\n/iXWUngAcGBw2ZByGnRXYc22N2HJYBe8v1+B8zF+rqCoQvv20KaNt/Y5+Pe/YfBgGDMGatUKOxqX\nK574pcfryAKWbOX7GGvVOWTdfys24cj7WLfM97HEb3/WJg77AVvkKl5XLUuxRD2ZuH+E5XEHYas5\nHISNF1xvqYlvgXOCO3vrX0HzMX4FLI79lx95BH75Ba66Kp7lLynur8FuuyXYdlsYMCDsSMIR9/ff\nufIU/PdjODaYrh4228ohluhNxoZ2HZZIsANwKDZmrDXwIpYrvgFcBxxB4SZ9hfj+18YS9p7AS9js\noe8DxwATsVUd/gIcC/wrkeATrBspewDvAn/Hsv57Kfixf4X4/leXj/FzeeWnnyzhe+cdb91xRgQe\nfBBatYITT4RmzcKOyDnnsuxX7Mh/JOhT8G0xjAJGB9umQFusy+YjVNAV0OU1wZbK2BU4O7htLvAe\n8DRwHrbcRBvgsJpwaHcoOgZqno3N+PofsrLEh4sm7+rp8oYqHH+8je3r2zfsaFzUPPgg/Oc/8NFH\nUHO9Pi6u0HhXz/R4HVlAErDyHJh6BNx2Owzf3A7+DwUOCy53DjVAFzW/YIvZJ08MzAYOXQmX3Qr7\n3AE1bwXphJ8dKBA+xs8VhGefhZtugvHjYUMfce5KWL3aZvc89ljo2TPsaFy2eeKXHq8j89uvwHtL\nYZOroekL0O0hWN3BZoU8HBuu5V8GV1mzsBbid4CZE+HOs2HZzjD1YTh4a1uqw+UvH+NXwOLSf3ne\nPOje3Vp0UpO+uJS/PHF/DZLlr1HDJnrp398WeI+LuL//zpUnX78fq4AxwA3YZB1HfwbNW8P2M2H2\n5/BsBxgC/AsbulVW0pev5c8UL3+i1Nu3w9Zj/A/wZkvYcAzQFA7bC7oPg72AXti40KU5ijUb4v7+\nl8YTP5cXunaFjh1h333DjsRF2W67wdVXw/nnWwugc87li5nYeLxTsMW8zwd+WwX/6Q8fHAUNr4bG\nz0NRfT94c5kjwB4bQav+UG8IPH0pvHU+1PsNrge2AtoDd2KTBnm/gfzmXT1d5A0bZl33Pv8cNqlw\n1VIXd6tW2VIfnTvDv/4VdjQuW7yrZ3q8joyepdhsjG8Ab2Ljro4AjgKOBLafCnTEpnF8DFuM27ls\n+w3ojvUFfRIWtbE/38Q+q4p9RtsD7YAtw4rTlcnH+Lm89euvtjD3E09AcXHY0bh8MWmSfV4+/xy2\n3z7saFw2eOKXHq8jo+F7YAR2AP0e0Aw4GjuIbk2w9ppiid7lwNXYGn3exOdy7b9YX+LzgT5ALfto\nfo19fkdgawjujX1+j8a6iPpHNXw+xq+AFXr/5WuugSOPLDvpK/TyV0bcX4PSyt+smbX2de2a+3hy\nLe7vv3PlCfv7sQQ7QO6KjcU7CBiHTbs/HVuE+zps2YWaYNMvnoT1qxuFtbxU40gt7PKHzcufqPqD\nTwAmYKvFHwh8bd1CGwOXYi2Ac4CrgstTgR2AzsDzwMKqP3PGxP39L40nfi6yxoyBIUPgllvCjsTl\no969YeJEGDo07Eicc3HyHXAP1gKyDdAfm0xjCLbY9qPYOL56JR/4JtZksivwKdAiN/E6V6ZtgdeB\nc7GFAO9nnUF+m2Cf87uAb4APgX2AJ7ElRdoA/bDc0YfdR4N39XSRtGIFtG5tE3WcdlrY0bh8lUjA\n2WfDl1/CFluEHY3LJO/qmR6vI7NnCfAuMBxr3fsdOxjugI2BqlOZHVyBda17DFuMz7mo+QqbCnQ7\nbBaiCtZ8WIp1Zx6BfTcWs7ZL6JFA3exFGns+xs/lnQED4L334PXXQfzQzlXDeefBppvC3XeHHYnL\nJE/80uN1ZGZ9hx3QjsAmaCnCDmiPDv6u9AdzAnYw3Rx4AD8adtG2HJvq81HgIeBvlX9ocnxr8jvT\nknW/M94FMXN8jF8BK8T+y999B7fdBoMHV5z0FWL50xX316Ci8t96q3UZHjMmN/HkWtzff+fKk6nv\nR8mxegdj3dc6Az9gB7JXYxNdVCrpWw3cik3jeSXwHFlJ+uL+++DlT2R2hxsCNwMvAF2wyV/+qNxD\ndwP+D+s5Oge4BpgLnAZsT3bGBsb9/S+NJ34uUlRtUo4rr4SGDcOOxhWCevXgjjvgggusC7FzzlUk\nOXvhXVj3tK1Zd6zeT6wdq5d2vvYjcDgwDBvL15E0mgidi4CDgc+xpK8VMDa9h2+Mfa/KGht4IHAj\n9vXwsYGZ5V09XaQ884xN5jJ2LGywQdjRuEKhCu3bwxFHwGWXhR2NywTv6pkeryMr9hs2keYbwbaC\ntUstZGy9suexlpJLsXF9NTOxU+dC9BzWFJ6hz3RyfcvksifzsDGB7YPLCoYWOnyMn8sTCxdC06bw\n3//CfvuFHY0rNN99B/vvD+PHw047hR2Nqy5P/NLjdeT6VmND7N4MtnHA/tji1Edhw+4y9gFbjPVz\n+wR4GvhrpnbsXAT8CHTCzpY8CTTM3K5nsPY7+g426W3yO3og1vvUrcvH+BWwQuq/3Ls3nHBCeklf\nIZW/quL+GlS2/LvvDt26Fd7afnF//wuJiOwoIqNEZJKIfCEiXYPb64rIWyLytYi8KSJbpjzmKhH5\nVkSmiMiR4UUfTSW/Hz8Dj2PzqWwLnAHMxtZKnw28DVyGraSQsaTvPWyZhs2xgYE5TPri/vvg5U/k\n5okaACOxtf/2AZ5gnWUfqmNn4ELgJaz17y5gA+w7uxVwHHAv1mW05FPG/f0vjSd+LhLGjIFXXoGb\nbw47ElfILr8cpkzxtf1cZK0EeqhqM+AA4BIRaYxN/zFSVRthvRGvAhCRptgwsyZYr8TBIj4Pcqol\nWHexnlgy1xx4DWiLjR/6CjuQ7ABsmuknX4Z1fTsNuA8YnI0ncS4iamBftJHALdgv0/zMPkUtbHjh\njVjj+ffYyZvx2LDZXYALsHG4GX7qguFdPV3oVq6EffaxsVdnnhl2NK7QjRoF55wDkybBZpuFHY2r\nqjh09RSR/2Ins+8F2qrqHBHZFkioamMRuRJQVR0Y3H8EcL2qrjeHbVzqyJVYl82RwTYWm3uiHdY1\nrDU5Glb3JTZpy07Aw9jsMM7FxVLs9NQQbM2/o7L/lIqdyHkLa7l/H5uBt12wtcEmlYkDH+PnIm3Q\nIHj1VRg50tfsc7nRsSNst51NJOTyU6EnfiLSEEhgjVQ/qmrdlP8tUNV6InIP8LGqPhPc/m9guKq+\nXMr+CrKOVGAKNvZnJNarckfsQO8I4BAgp+d3VmNNiDcDA4Bz8Rk7XXy9A5wDHA8MBDbJ3VMvB8Zg\nvwtvAxOBfbHfhsOxk0CFOodgefVjoZY5NhKJBMXFxWGHUWU//QT9+sGHH1Yt6cv38mdC3F+DqpT/\nttugeXNLAFu0yE5cuRL3978QichmwItAN1X9XURKZmxVyuA6d+5Mw2CdnDp16lBUVLTms5McCxP1\n622Li5kG3J9IMB6YVFxMbaBZIkEr4KHiYrZJuf/YYB85iW8OFD9YDMsgMSgBO0CxhPt6JW+Lyvvn\n5Y9Z+Q8vhs8hcXICGkPxS8WwT27L37e4mEMTCf4AtLiYd4DTEwnmAocVF3MosHkiwa7B9Zy+Phm6\nPmjQICZMmLDm97083uKX5xJ5ftB36qmw555w441Ve3y+lz8T4v4aVLX8gwfDc8/Bu+/md0tzXN//\nQm3xE5ENsGFoI1T1ruC2KUBxSlfP0arapJSunm8AfQqtq+cPwOiUbTlwWMq2SzmPzcn3Q7GZDC8D\negC9iMwyDXH9fUjy8keo/M9jyz5cBPTGBuxlWXnln4t1qRiFNUwuwsb+FgOHAk3J38Z67+rpImnk\nSFtUe9Ik2CSHzf/OAaxaZTPIdu0KZ58ddjQuXQWc+D0B/KKqPVJuGwgsUNWBInIFUFdVrwwmd3ka\n2A/YAevRtEdplWE+1ZEzsAOyd4PL31l7MHYo0IgIHZDNBf6JzTLxJDZ7p3OudD8D52HTcz6BZVcR\nMRP7vUmeYPoDSwSTyWA+JYKe+LnIWbYMWra0Lnd/+1vY0bi4+uQTOP54m+mzTp2wo3HpKMTET0Ta\nYMPUvsDakRS4GpvA7gVs0vQZwCmquih4zFXYodQKrGvoW2XsO5J1pAJTsSQvuS1h7cFWMTZlaSTf\n6FeAi4HOwPXARmEG41yeUGzCo97YfMXdieQaAzNY+5uUAH7Fxgwnk8EWRDJswNfxK2ip/ZjzyR13\nQKNG1U/68rX8mRT316A65d93XzjuOLj22szFk2txf/8Liap+qKo1VbVIVfdW1Vaq+oaqLlDVdqra\nSFWPTCZ9wWP6q+ruqtqkrKQvSpYCHwN3YrO9N8AOpkZi61eMwNbTewHLqap7lj0r348FwFnYQmIv\nAf2JbNIX998HL38i7BDWJ9jCfGOAodjZne+y81TVKf/OwNnYpKTfY0tGnIhN2HsK8BfgGKAf9vv1\na/VCzRmf3MXl3IwZcPvt8OmnYUfinK0d2ayZLfHQqlXY0ThXOJZgB0njU7bJQGNgf2zh5ZuB3Yho\ni15pXsO6dv4DmICvy+dcVe2K9am8B/tB6ANcQmSbpBoAZwYbwCzsJNb/gBuw37edseVjklsRsGXO\nIy2fd/V0Off3v0Pr1nDNNWFH4px55BF4+GH46COoEdFKx62rELt6ZlM268jfgG+Bb4BJwfYl8COW\n5KUeCO1FTmd0z5xFwKVYR9xHsb5ezrnM+AbrMr0h8B8sKcwzK7Dfvs9Ye6Lrc6Ae0Axbl6cZNkZ5\nD6A+2Tvh5WP8XGSMGGGTaXzxBdSuHXY0zpnVq6FNGzjvPDj//LCjcZXhiV96qlpHKpbYzcImP5gB\nTA8up2EJ32Jgd2BP7MAmeZCzBzmZuC/7hmItEcm1yHK6MKBzMbEK6wM+ALgW+D8iMztuVa3Gfi+T\nJ8MmAV9jv5s1sN/IXbGWwobBZQNgOyxhrGoF54lfAYvUVL0VWLbM1k675x5o3z4z+8yn8mdL3F+D\nTJV//Hjo0AEmT4Z69aofV67E9f33xC89IqJjVVkOLMPG2v2OJXXJy/nY8LX5wTY72AQ7ENkROzBJ\nbg2xZG97Its7q3rfj3nY9PNjgX+Tl618cf19SPLy52H5v8Gmq1qNDbBrXPVdRbX8CvyCFXUadiIt\nuf2InWj7E9g22OqnbPWw7qObpWybYI2lGwWXe/kC7i4Kbr/dxlJlKulzLpNatYITT4TrroN77w07\nGucy70LsoGBDoDawOXbQkLzcDmutSx5gbBPcFrsGLgWew2YbPAs7+MzL/qnO5aE9sak0BwMHAT2x\nNTILovuAEWCrYGtTxn2Wsvbk2/wS21TWPXH3J7a+afLEXrnPXSitZHFt8csXP/xgB9affgq7lLfa\nrnMhWrAAmjSBN9+EoqKwo3Hl8Ra/9HgdWUkzsAWmf8Ra+fYLNxznYm06NpnSHGwJiH1CjSZv+HIO\nLnQ9e0KXLp70uWirVw9uvBEuuQT8GNm5GEmOL2qNtTKMw5M+58LWEHgD6AX8DZtg6fcwA8p/nvjl\nuUiu0VLCyJEwdixcfnnm950P5c+2uL8GmS7/eefB8uXw5JMZ3W3WxP39d648lfp+jMOmkx8GfARc\njfWHLQBx/33w8ifCDqH6BFtD4UtgIdYffVjlHloQ5c+wSCV+IvKIiMwRkYkpt9UVkbdE5GsReVNE\norYkhivH8uXW0jdoEGy8cdjROFexmjVtjN8VV8DixWFH45zLmsVAF6ADtlr8KGx8kXMuev4CPI4t\n99ALm2V3RqgR5aVIjfETkYOwRtwnVLVlcNtAYL6q3iIiVwB1VfXKUh7r4xci6NZbYfRoeP11EB+N\n4/LIeefBFlvAnXeGHYkrjY/xS4/XkSmSk7f0BI4F+mOz2Tjn8sMy4FZgEDbxSw8KppU+E/JqOQcR\n2Rl4NSXx+wpoq6pzRGRbIKGq603u6pVa9Pz8M7RsaYti7+lnUV2emTcPmjaFRMJmo3XR4olferyO\nDHyBLdGwALgfODDccJxz1TAVW+9vGnAXcGS44URFvk/usrWqzgFQ1dnA1iHHEylR7r985ZW2GHY2\nk74olz9X4v4aZKv8W20F114L3bpFe6KXuL//zpVnzfdjIZbwHQ78AxvXF4OkL+6/D17+RNghZNeu\nwOvAQGw23r9jSWCg4MtfBfm4jl+Zh2CdO3emYcOGANSpU4eioqI1Czcm3/xCu54UlXiS1++9N8GI\nETBtWjzL79cL4/pFFxXz0ENwww0J2rYNP544X58wYQKLFi0CYPr06ThXKauAh4DrgBOAydhYIedc\nYRDgOKy173bgr9iY3SvCDCq68qGr5xSgOKWr52hVbVLK47wbS0SsWgX77mtLOJxxRtjROFc9o0fD\nOefA5MmwiS/iHBne1TM9sawj38LG8dUH7gBahRuOcy4HfgSuAkYDNwKdgJqhRpRz+dbVU4ItaRjQ\nOfi7EzA01wG59DzyiB0gn3562JE4V32HHmonMm65JexInHOVMhmbqfMS7MBvNJ70ORcXDYCngFew\nGUBbYzP2OiBiiZ+IPIOtorOniPwgIucAA4AjRORrrHf+gDBjjJqSXR7DtmCBjYu6557czOIZtfKH\nIe6vQS7Kf9tt9pmOYg/DuL//zq3xA3AuUAwcBUyCRJ3EuqeSYybuvw9e/kTYIYRnX0jcmIBrgAuA\n9sBn4YYUBZFK/FT1DFXdXlU3UtWdVPVRVV2oqu1UtZGqHqmqi8KO05WtTx846SQoKgo7EucyZ6ed\n4NJLoUePsCNxzq1nPtalc29gO+AboBs+vbtzcSfYZE5TsHGAHYDTge/CDCpckRvjV1WxHL8QMV98\nAe3a2Vio+r4mkiswS5fa8g4PPWSfcxcuH+OXnoKsIxdi63jdB5wCXIslfs45V5rfsd+MQcCJwNVA\nwzADyo58G+Pn8pAqdO0K11/vSZ8rTLVrwx132PIOK1aEHY1zMbYIuB7YA5gJfAIMxpM+51z5NsO6\nfn4NbIWN//snMCPMoHLLE788F5X+2y+9ZOP7Lrwwt88blfKHKe6vQS7Lf/zxsMMOcP/9OXvKCsX9\n/c82EdlaRDqKyG0i8u/gsmMwy7TLpXlYq97u2Hi+McAj2FpeZYj798PLnwg7hFB5+ROl/6M+cBPW\nLbw+NvnTBcC3OQosRJVO/ESklog0F5GDgsta2QzM5Y8//7SlG+6+G2rGbMpcFy8iMGgQ3HgjzJsX\ndjQum0SkiYi8iI0O6QjUAmYHlx2BSSLyoog0DTHMeJgBdAEaYcnfGGy2vt3CDMo5l/fqAzdjLYDb\nAwdi3cbHhxlUdlU4xk9EjgH+hc2ouQL4Ddgcq/xGAQ+o6mtZjrNCBTl+IU9cfz1MmQLPPx92JM7l\nRvfu8McfNt7PhSPbY/xEZAxwK7au7LJS/r8RNl1AD1U9IFtxZEpe1pGfAncBI4DzgUvx7pzOuez5\nDXgYW/ezCdAdmw00z/pHllc/lpv4iciH2PDpZ4CEqv6c8r/tgbbAmUBdVW2T0ajTlJeVWgGYMQNa\nt4bx423mQ+fiYNEiaNwYhg+HVr4+WCh8cpf05E0duRJ4GUv4ZmItfecDdcIMyjkXK8uA57BJYP4E\numIriW8WZlCVV53JXf6lqseq6jOpSR+Aqv6sqs+q6rFYi6ALQdj9ty+7zCZ1CSvpC7v8URD31yCM\n8tepA/36QZcuNrFRmOL+/rsCcxBwN9AD+B64jGolfXH/fnj5E2GHECovf6JqD9wIS/TGYy2Ao7Cx\nxYszFFiIyk38VPWLyuyksvdzhWX0aPj0U+jVK+xInMu9c86BZcvgmWfCjsRlg4i0EpFnROQmEdlE\nRPYQkd5hx1XQFgNfAu8BJwEbhBuOcy7mBDgEeAkbUzwh3HAyoTJj/DoDR6nq6aX871ngdVV9Kjvh\nVV7edGMpECtXwt572/i+k04KOxrnwvHRR3DKKfDVV7BZnnQBKRQ5GON3HXAnsCNwAnAv8JKqHpmt\n58ymvKgj3wd6Af8LOxDnnCvhImzcX9ewA6lYddfx+xdwSxn/GwBcUtXAXP568EHYais48cSwI3Eu\nPAceCMXF0L9/2JG4LPgCaKKqU1S1P1CMjzTLrolAy7CDcM65UrTEfqPyXGUSv91V9bPS/qGqn2NL\nqLqQhNF/e/586NsX7rrLprcPU9z7r4O/BmGXf+BAOxEydWo4zx92+QvYF8CaSctU9VXAU/xs+hzY\nK7O7jPv3w8ufCDuEUHn5E5nb2V7Yb1Seq0ziV1NE6pX2j+B2X7ktZq67zrq3tWgRdiTOhW+HHaBH\nD1vL0hUOVf1OVe8scdsrYcUTC97i55yLqhbAZGBV2IFUT2XG+L0OjFbV20r5X0/gcFXtkKX4Ki0v\nxi8UgIkT4YgjbN2+eqWeDnAufpYuhWbNrOWvXbuwo4mHXC7nICJbYiM79qbEhN75MuYv8nXkamAL\n4Cdgy5Bjcc650uwGDAcahR1I+cqrHyszZ1Zf4B0R2Qmb12YWtoTqSUBn4LAMxekiThW6dYM+fTzp\ncy5V7dpw++32/ZgwAWrVCjsil2FDsN4trwBLQo6lMH0P/AVP+pxz0dUS6+4Z8cSvPBV29VTVT4Aj\nsTOd7wBfBZd7Y7N9js1qhK5cuey//eKLsGABXHhhzp6yQnHvvw7+GkSl/Mcfb90+Bw/O7fNGpfwF\nbn/gaFW9V1UfSd3CDqxgZKmbZ9y/H17+RNghhMrLn8jsDgtggpdKrZKjqh8DB4vIxkBdYKGq+lnP\nGPnzT1us/fHHYQNfW8m59YjAoEHQti2ccYbNeusKxgdAY/K+yo+wiWR8YhfnnMuovYDHwg6ieioc\n47fmjiK7lvGvZcAsVV2dsaiqIPLjF/Jc374waRK88ELYkTgXbZdeCkuW2Hg/lz05HuO3NTayYwww\nJ/V/qnpDhp/rEeBYYI6qtgxuqws8D+wMTAdOUdXFwf+uAs4FVgLdVPWtMvYb7TryBOBM4OSwA3HO\nuTJ8BxwOzAg7kPKVVz+mk/itBpJ3Tu4seX01MAy4WFXnlHxsLkS+UstjM2ZAq1YwfjzsvHPY0TgX\nbYsWQePGMGIE7L132NEUrhwnfg8Dx2FLjKf2dlFVPTvDz3UQ8DvwREriNxCYr6q3iMgVQF1VvVJE\nmgJPA/tgC82PBPYorTKMfB25KzCCvB4745wrcKuxccg/EulVXau7gHvSBcAzwJ5A7eDySeBibJLT\nDYD7qheqS1cu+m/36gVdukQz6Yt7/3Xw1yBq5a9TB264Abp2tQmRsi1q5S9QpwFFqvoPVe2YsmU0\n6QNQ1Q+AhSVuPh54PPj7cax9DCwZfU5VV6rqdOBbYN9Mx5R1v2LtqLtnftdx/354+RNhhxAqL38i\nszusATTHVnnNU+kkfn2BC1T1e1VdrqrfYUnftar6FTbDZ3HmQ3RhSiRgzBi4/PKwI3Euf5x3Hvzx\nBzz/fNiRuAyZCqwI8fm3TvamUdXZwNbB7Ttg556Tfgpuyy9fAM3wVYGdc9GXnNkzT6XT1fNn4LAg\nyUve1hhb4287EdkQmKuqoTR+Rr4bSx5auRJat4bevW3Bdudc5b3/Ppx5pq15uemmYUdTeHLc1fMy\n4ETgHtYf4zcqC8+3M/BqSlfPBapaL+X/81W1vojcA3ysqs8Et/8bGK6qL5eyz+jWkfcD44GHww7E\nOecqMBiYADwUdiBlq+46fkmDgFEi8ih2hnFH4JzgdoAOwMfVCdRFy8MPQ926cLIPtncubQcfDG3a\nwIABcOONYUfjqumS4PLmErcrNjot2+aIyDaqOkdEtgXmBrf/BDRIud+OwW2l6ty5Mw0bNgSgTp06\nFBUVUVxcDKztEhXK9YmQ2DgBiZCe36/7db/u1yt7vSUk7k1E6vdq0KBBTJgwYc3ve3kq3eIHICLt\nsTm3tscWcn9BVd+o9A6yKNJnM7MokUiseeMzacECm6Di7bdhrwhPsZ2t8ueTuL8GUS7/zJn2/Rk7\nFnbZJTvPEeXyZ1MuW/xyTUQaYi1+LYLrA4EFqjqwjMld9sO6eL5NPk7uciDQH2ib+V3H9fuR5OX3\n8nv5izO708XYr+1iIts9PVMtfgRJXiQSPZdd111nLX1RTvqci7odd4QePWwNzJdeCjsaly4R+RGb\na3I48Laq/pGD53wGGy9fX0R+APoAA4AhInIuNpH4KQCqOllEXgAmY2MQL45udleG1dgYvyws3u6c\ncxm3JbAVNvJ7j5BjqYJ0xvhtBFwHnA7UV9UtReRIYE9VvTeLMVZKpM9m5pmJE6FdOxubVL9+2NE4\nl9+WLoVmzWxdv3btwo6mcOSixU9EtsOGMXQADsFGdgzHxtF9nc3nzrTI1pFTsTT3h5DjcM65yjoe\nOBs4KexASpep5RzuxCYxPZO16/dNAi6qXnguSlRtGvq+fT3pcy4TateGO+6Abt1gRZjzQrq0qeos\nVX1EVU8CtsM6JO4AvCIi34nI3SLSPjgx6qric7y1zzmXX/J4Zs90Er+/A2eo6sdY5wxUNT+nji4g\nyQGemTJkCCxcCBdemNHdZk2my5+P4v4a5EP5jzsOdtgBBg/O/L7zofyFIFgrb5SqXqaqTYF2wNdA\nl2BzVTERyOKQgrh/P7z8ibBDCJWXP5GdHe+F/XbloXQSv+WUGBMoIlsB8zMakQvNn3/aWKS774aa\nER2w6lw+EoG77oJ+/WDevLCjcZUlIqcEs2iuR1Wnq+p9qnqMqt6W69gKxkS8xc85l19akreJXzpj\n/G4Ddge6A+Ow5VYHAd+pau+sRVhJkR2/kEf69IGvv4bnngs7EucKU48e8Pvv8FCE1//JFzka4/cN\nsOuo+VIAACAASURBVBvwPfAe8C7wnqrOyObzZkNk68jdgdeAxmEH4pxzlbQKm+TlZ2CLkGMpRXn1\nYzqJ34bAQOACYBPgT2y51StUdXmGYq2yyFZqeWLaNPjrX2HCBGjQoOL7O+fSt3ixLZPy6qv2fXNV\nl6vlHIIWv4OxyV0Oxsa6/0SQCKrqv7MdQyZEro5chc1Fuj82LXpac4w751zI9gMuBU4EIjbKOyOT\nu6jqclXtrqqbAdsAmwfXQ0/64ixT/Zd79IDu3fMv6Yt7/3Xw1yCfyr/llnDTTdClC6xenZl95lP5\n85GqzlbVIaraRVWLsIm87wOOAB4MN7o8sRD4AHgAuBg4ADtbfgLQjawmfXH/fnj5E2GHECovfyJ7\nO78IuAmoCxQB52D9IN/GVjqP0Hm2VOX+3IrIruX8e3MRSyZVdWomg3K59dZbtoTDs8+GHYlzha9z\nZ1va4cknoVOnsKNxFRGr6IqwFr9DsOXGfwZeAN4PMbRoWQXMxKa7Sd0mA79ig0OaAy2A07DJEbYM\nJVLnnKu+zsG2BPgS+Awb9zcUW5tUsd+9RinbnsAuwIY5j3aNcrt6ishqLHRhbe6abDpc80BVDX0q\nkMh1Y8kTy5fbIu0DB9rMg8657PvkEzjhBFsrc0s/+K2SHI3xex3YG0thPgi2j1T1t2w+bzZUq45U\n4A8s3Z2Zsv2ArcM3DfgR+At2YJN6kNMMaEB6U8k551w+U2Autujd18A3rD0ZNhPrN7krlgTuDOwY\nbA2A7YE6rM22qiBTY/zOwaavvh6YEYR6HfCOqj5W9fAywxO/qrn9dhg5EoYPt5kHnXO5cd55UKeO\nfQdd+nKU+H2L9YwZjY3pe19Vv8/mc2aLiKh+qTY/93JgKfA7ltD9HmwLS2xzgTnBBraSYQPWHqA0\nYN2Dl9q5Ko1zzuWplVjyNzXYfmDtybQfsRNsS4Gtg20boB7WpTS5bQ5sBmwaXG6MtSIGmzTKTOI3\nE9hDVZek3LYJ8I2q7phWobMgrolfIpGguLi4So+dNQtatICPPoI998xsXLlSnfIXiri/Bvla/jlz\noHlzeO89aNKk6vvJ1/JXV4iTu/wF+BDr5vmBqk7IdgyZICKqTXXtwcFGrD1wSB481GXdA4zUA49N\nqdYZ6LDE9fuR5OX38nv5i8MOI31LgHnYSbe5wALWnpBbwNqTdckTd0uAFaw5sSffll0/pjOkugbQ\nEJiSctvOQOjdPF3VXHmltTrka9LnXD7bZhvo3Ru6drVxtt7iHk2qOhsYEmyISF1sdutrsIle8qcO\nnBR2AM455yq0MbBTsFVFOccT6bT49QJ6AI9ijZENsGGNg1T1liqGljFxbfGrqo8/hpNPtjFGm28e\ndjTu/9m77zApqnSP4993yCBRJClJMGBEVBCvrCMqioqAAWUVRV2ziAFdWV0VMStrjqwKKCziXfea\nQEWlVVSUVVAURAxDElBAghIGZs794/QEhplhBrq7qrt+n+epp6eru6vft3q6T52qEySaNm2Cgw6C\n226DU04JOpr0ksIrfiUHdzkC3wPjv/jpHP6W7BgSQWWkiEg0JKSPX3xDxwOn47seLgEmOOfeTEiU\nO0iFWsXl5UHnznDttfDnPwcdjUi0vfcenH8+zJ4NtWsHHU36SFEfv4n4yQeqA58Sn8Ad+MQ5tyGZ\n751oKiNFRKIhIfP4ATjn3nTOXeCc6+mcOz8slb4o2545SkaOhJ12gv79Ex9PqkV9jhrQPkj3/Lt3\nhy5d4O67t+/16Z5/yH0AnAg0cM51d84Nc85NSbdKX5RF/fuh/GNBhxAo5R8LOoTQKbfiZ2ZXmlm5\n89GbWQ0zuzKxYUmyLF8ON98MjzyiPkUiYTFiBDz+OPyQluNFZqZ4ufaAc+5j59ymMp6j8k9ERNLG\ntubxuxMYAEzEN3GZC6zFDyS6J5AN9ATGOOduSnaw5VEzloq5+GKoWRMeeijoSESkuLvvho8+gtde\nCzqS9JDspp7pVP5VhMpIEZFo2KE+fmbWGD+IS09gf3yn9t/w89NPxBd6KxIZcBlxHA88iL9K+Yxz\n7p4Sj6tQ24b//hd69fIDujRoEHQ0IlLcxo1wwAH+6t9JJwUdTfilqI9fKMq/RFAZKSISDTvUx885\nt9w5d79z7mjnXBPnXHXnXFPn3LHOuQdSVOnLAh4FjgP2Bfqb2d7Jft90UNH2y/n5cPnlcOedmVXp\nU/tt7YNMyb9GDXj4YRg8GDZUogdZpuQfRmEo/2THRP37EYn8nYPcXFi9GpYuhZ9+gu+/h++/JzZ2\nrP/7xx/h559h1Sp/li0iJ0Ei8fmXI+r5l6Yy8/gFqTMwzzk3H8DMxgO9gW8DjSqNPPccZGXBuecG\nHYmIlOW44+DAA+G+++Dvfw86GhGRAG3c6CtxOTmwaBEsXuyXJUtg5cqi5bfffEWuVq2ipWr88Hb9\nen8/L8+fUVu/3i95ef4seKNGRUvTprDrrkVL69bQrp0fDU8kQ1RqOoegmNmpwHHOuYvi988GOjvn\nriz2HDVjKcPKldChA0ycCAcfHHQ0IlKe+fOhUyffNLtt26CjCa9UzeOXKVRGSmitXAlff120fPed\nv0q3ZAm0agVt2sBuuxVVyFq0gJ139pW1nXeGhg2hevXKvefmzf7qX0HlccUK/34FlcvFi32F88cf\nfQWxfXvYYw/Yd1/Ybz/Yf39o3lyj5EkolVc+pssVP9kBN94Ip52mSp9IOmjdGq65Bq66Cl55Jeho\nREQS6Ndf/Vmt6dP97eefw9q1vjK1336+YtW7t69otWoF1aolJ46qVaFxY7+UJz/fNxH9/ntfIf3m\nG3jjDZg1y1817NQJDjnEL4ce6mNWZVBCLF0qfouBVsXu7xZft4WBAwfSpk0bABo0aEDHjh3Jzs4G\nitr5Ztr9gnVlPV6nTjb/+Q+MHBkjFgs+3lTnH4X7JfdF0PEo/x2/f+ihMZ54Al5/PZuTTope/qXd\nnzlzJqtWrQIgJycHkYqIxWKF/0dRFGj+zvnK0tSpRcuvvxZVlM45xw8x3qZN0ipLO5x/Vpa/2rjb\nblByO0uXwhdf+ArsmDEwaJBff8QRfunWzY/YVTW4Q239/0c7/9KkS1PPKvihtI8GlgCfAf2dc3OK\nPSeSzVjK+6fOy4PDDvODugwcmNKwUkZfau2DTM3/7bfh0kt9y6datcp+Xqbmvy1q6lk5KiOjKeX5\nz58P777rl/fe800wu3Urqgzts4+vTKVISvN3zudfvKK7aBH86U9w9NFwzDE+/xReEdT/fzTz36Hp\nHMIiPp3DQxRN53B3iccjWaiV5+mn/UmoDz5I6e+siCTI6af7lk+33hp0JOGjil/lqIyUpNiwwR9k\nTJzol1WroHt3X8k5+mh1VP7lF5gyBd55x1eG16+Hnj3hhBPg2GOhfv2gI5QMlBEVv21Robal5cv9\niaXJk/0ogSKSfhYuhIMOgk8/9YPLSRFV/CpHZaQkzK+/wmuv+U7IsZjvm3fCCb5C07GjzjSX54cf\niirJU6f6wRdOPhn69IHddw86OskQOzSPn4Rb8f49xQ0dCv37Z36lr6z8oyTq+yCT82/ZEq67Dq68\nsuxppzI5f5EdFfXvR8Lynz8fHnjAN1ts3x4mTYJ+/fyolx995EeR69QpdJW+0H3+7dr5voCTJsGy\nZTBkCMyZA127+gO2W26Br75K2DyDocs/xaKef2nC9Q2VhPj4Y38y6bbbgo5ERHbU1Vf7qaz+7/+C\njkREImXhQl/Z69rVX5n6+mu4/npfYXnpJTjrLD+dgmyf2rXhpJNg5Eg/cuhjj8Hvv/srgB06wM03\n+30ukkBq6plhNm/2v8833OCv+IlI+ovF/AB4s2drLuECaupZOSojpUJWrIAJE2DsWH8lqk8ff2Wv\ne/fkTa0gW3IOPvvMfw4vvQR16/pK9p//7EdAFdkG9fGLkAce8FPMTJ6sqWREMsk550CzZnDvvUFH\nEg6q+FWOykgp04YN8Oqr8MIL8P77vq/eWWfBccdVfmJ0Saz8fPjkE18RnzAB9t4bzj4bzjjDT1wv\nUgr18ctgxdsvL1oEd9wBjz8enUqf2m9rH0Ql//vvh1Gjtm75E5X8RbZH1L8fZebvnB816tJLYddd\n/TDgp53mDyTGj4devTKi0pf2n39WFvzP//gDu59/hr/+1Y8S2ratr/xNnOibepUh7fPfQVHPvzSq\n+GWQq6+Gyy6DPfcMOhIRSbQmTXy/3Usv9SeBRUQqbdkyuO8+P+z3gAF+BKmZM/10A+ec45sVSjhV\nr+4r5C++6Dt+H3WULxRatfL9e777LugIJQ2oqWeGePNNP1H7tiZ7FpH0lZfnx1m49FI477ygowmW\nmnpWTtTLyEjLy/MHCc88468W9e0LF1wAhx8eneZBmWzOHHjuORg92jcFveACf/W2du2gI5OAqI9f\nhlu/HvbfHx55xDfNF5HM9cUXfsqsb76J9oB6qvhVTpTLyMhatMhX9v75T2jRAv7yF988sF69oCOT\nZMjNhddf95/3p5/6wWAuvtjPsyiRoj5+GSwWi3HHHX6S5yhW+tR+W/sgavl36uSP3a6/3t+PWv6y\nNTM73sy+NbPvzOyvQccTJpH7fuTl+X5fvXvDAQcQmzHDVwY+/RQuvDBylb5Iff7Vq8Mpp/jPf8YM\naNiQWHa27yM4Zoy/ShAxkfr8K6hq0AHIjpk/H556Cr78MuhIRCRVhg+HffeFDz4IOhIJmpllAY8C\nRwM/A9PN7BXn3LfBRiYp9euv8Oyz8OST0LgxXHIJjBsH06f7icElWlq18v3/jjzSzw345JNw7bVw\n7rn+f6N9+6AjlICoqWcay8+H7Gw/xc4VVwQdjYik0ssvw003+XEZMmDwvUpTU0/PzA4DbnHO9Yzf\nvwFwzrl7SjwvcmVkxnPOD/X/+ON+Hqe+fX0H4EMPDToyCaMffvBXCkaN8s3ELr8cTjwRqlQJOjJJ\nMDX1zFCjRvnpdy69NOhIRCTV+vaFdu38AH0SabsCC4vdXxRfJ5lq3Trfj6tTJ38F5+CD/UH9s8+q\n0idla9fOTwS7YIGfC/DOO/26u+/2V4wlElTxS1O//gpDh8KFF8YifbJG7be1D6Kavxk8+ijce2+M\n778POhqRcMqo34cffoAhQ3wzvldegbvugrlz/VxOjRqV+pKMyn87KP/Y1itr1vRTeUybBv/+t58G\nYo89/EmE6dNTHmMyRf3zL436+KWp667zJ2z22CPoSEQkKK1b+4HbLrsM3npLI7NH1GKgVbH7u8XX\nbWXgwIG0adMGgAYNGtCxY0eys7OBogOkTLtfICzxVPr+n/4Eb79NbNgwmD2b7IsvhunTic2f7x/P\nysrs/KP++aci/2efJda7N0yaRHa/ftCkCbFjjoEjjyS7R49Q5aPPv/T7Dz74IDNnziz8fS+P+vil\noSlTYOBAP5z7TjsFHY2IBGnTJjjkED/K51lnBR1N6qiPn2dmVYC5+MFdlgCfAf2dc3NKPC8yZWRG\nWLPG9+d47DE/Oe+gQdC/v+Zmk+TKy/P9RR95BGbN8iPBXnIJ7KrW4+lEffwyyPr1flqWRx9VpU9E\noFo1GDnStwBbsSLoaCTVnHN5wBXA28A3wPiSlT5JI99+60dra9MGPvrIz8M3Y4aflFuVPkm2KlXg\n5JNh8mR/leG33/xE0WecAVOn+gGFJK2p4pdmbr8dOnaEXr38/ZKXs6Mm6vmD9oHyj9G5sx/dd8iQ\noKORIDjn3nTO7eWc28M5d3fQ8YRJWvw+5OXBq6/Cscf64fcbNvRXW158EY44YofacKdF/kmk/GPb\n/+IOHfxVhp9+8nMBnn++H1DomWfSZk7AqH/+pVHFL43MmuXP7D/0UNCRiEjY3H47vPsuvPde0JGI\nSIWsXAn33+87699+O5xzjh9xcfhwNa2T8KhfH6680l+NvusuP5dQq1bw179CTk7Q0UklqY9fmsjL\n8ydcLrjAN7kWESnptdfgmmvgq698t6BMpj5+lZPpZWRamTHD993797/hpJN8/73OnYOOSqTivv/e\nzx85erS/Kn3FFXDMMRphLCTKKx9V8UsTjz4KEyZALAZZuk4rImXo1w/at/dTNGUyVfwqJ9PLyNDL\nzfUVvcceg/nz/QS8f/kLNGkSdGQi2++PP2DsWH+Qmpvrh5g+91x/lVACo8Fd0tzChTBsGDz99NaV\nvqi3X456/qB9oPxjW9x/+GE/t/NXXwUTj0iYBP77sHAh3HSTbxr3z3/6S/I//QR/+1tKKn2B5x8w\n5R9L7hvUqQMXXQRffukPUj/+2A9MdMkloSiEov75l0YVv5BzDi6/3LcE2XvvoKMRkbBr1gzuuMNf\nTMjLCzoakQjKz/cTa/btCwce6KdmmDLFd8I95RSoqimUJcOYwZ/+BOPHw+zZvo/qCSf4ZqBjx8LG\njUFHKHFq6hly48f7g7jPP4fq1YOORkTSQX4+HH20H/33mmuCjiY51NSzcjK1jAyV5cvhuefgqaeg\nbl3fnPPPf9bcSxJNmzb5judPPgkzZ/oJqC++GNq1CzqyjKc+fmlq+XI/fcorr6jft4hUzvffw2GH\nwWefwe67Bx1N4qniVzmZWEaGgnO+8/3TT8OkSdCnj6/wde6sgS5ECsyb578jo0bBQQf55qEnn6wr\nGkmiPn5p6uqroX//8it9UW+/HPX8QftA+cdKXd++vR9t+8ILNeeuRFfSfh+WLYP77oO99vJD3R9+\nuO+7N2oUdOkSmkqffh9jQYcQqNDkv8ce/vuycCGcd54f5KhgSoh585L2tqHJP0RU8QupiRPho4/8\ndD4iItvj6qth9Wp49tmgIxHJAJs3w+uv+757e+3l+zKNHu0HsRg0yE+8LiJlq1nTX9GYMgXef993\nRD/iCN8/cPRoP0qoJJWaeobQ2rWw337+YO3oo4OORkTS2Zdf+umVvvwSWrQIOprEUVPPysmkMjLl\n5szxB6XPPw8tW/oJdc84A+rVCzoykfSXm+tPqDzzDHzyCZx2mp8S4vDDQ3PlPN2oj1+aueIKWL/e\nfwdERHbUTTfBN9/Ayy9nTjmqil/lZFIZmRIrV/rR1UaN8s3Tzj7bH4zut1/QkYlkrkWL/AmW0aP9\n1cBzzvFL69ZBR5ZW1McvjXzwAfznP3D//RV7ftTbL0c9f9A+UP6xbT7npptg7lx46aXkxyMSJpX6\nfVi/HiZMgN69oW1bXyAPG+Yrfvfdl5aVPv0+xoIOIVBpl/9uu8HQof4q+wsvwJIlcPDBvinok0/C\nihWV2lza5Z8CqviFyLp1vgXJE0+oq4CIJE7Nmr7p+JVXwq+/Bh2NSIjk5vrROAcO9G2hR470ffgW\nLvRX/Hr21Lx7Iqlm5gdJevxxWLwYrr3W9wvcfXc/Gui4cb5flFSamnqGyDXX+IHCxo4NOhIRyURD\nhvgy9F//CjqSHaemnpWTCWVkwmza5A8iJ0yA//s/P1DL6af7fnvNmwcdnYiUZc0a/5198UWYOtV3\nYO/XD048UfNlFqM+fmng44/h1FNh1ixo3DjoaEQkE61fDwceCPfe66cbS2eq+FVOupeRO+yPP+Ct\nt3xfiokT/fDy/fr5Cl/LlkFHlzJt2rRh/vz5QYchSdS6dWtycnKCDiP5fvutqBL48ceQne2v1vfq\nFfkDafXxC7n16+H88+GRRyr/vxr19stRzx+0D5R/rMLPrVXLN/m8/HI/doVIRlu8mNi11/qmYS1a\n+H4UXbv66RemTfPNbDK80lfy92H+/Pk457Rk8FK8Yp/R5WPDhn5OwDffhAUL/BX7N96Adu3gyCPh\nvvuIjR6tiWxLUMUvBIYNg/339yPYiogk0xFH+N+aq68OOhKRBMvN9XOD3XgjHHQQHHCAn8fkzDP9\n5OqTJ8Nll8GuuwYdqYgkUoMGcNZZ8L//C0uXwnXXwY8/+tt27fw8m6+9pn6BqKln4KZPh5NO8icg\nmzYNOhoRiYI//vDHxA8/7LtGpCM19aycdC0jy5Wf7wvPWMxX6j780PfXO/ZYOOEEOOwwDcxSQvx7\nE3QYkkT6jItxDr7+2l8JnDwZPvvMnxQ69lg46ig49FCoUSPoKBNOffxCasMG6NQJbr7Zn5AUEUmV\nWMxPTTZrVnqOIqyKX+WkYxm5lQ0bYMYM+OgjP9XC1Kmwyy6+Wdexx0L37rDzzkFHGWqqFGQ+fcbl\nWLfO/3ZMnuwLwblzfeXvyCN9c5hDD4X69YOOcoepj19I3XIL7LOPb5a8vTK6/XYFRD1/0D5Q/rHt\nel12NpxyCgwenNBwRBJj0yZ/VuL55/08JJ07+0rd5Zf7Zptnnw2zZ/sDt6ef9oO0lFLp0+9DLOgQ\nJEBR//y3yr92bTj+eBgxAj7/3A9zfd11frCNYcN8M/D99vNzqz31lL9CuG5dILEniyp+AZk2DUaP\n9lOUmM5Zi0gA7rrLD4b26qtBRyISN3y4n7C5fn1fmXv9dWjVyh+o/forfPEFPPaYH5GzWbOgo5Uk\nGDVqFAcccAB16tShRYsWXHbZZaxevRqAYcOGMWDAgFJf16ZNG2rXrk29evVo0aIF5513Husy7KBd\nEqx+fd8s/J57fFPx336DMWP8b9C0aXDxxf6E0j77wIUX+n7EaU5NPQOwfr1vYjx8uC/XRESC8uGH\nvqn5V1+lVys5NfWsnLQoI9evh0aN4N13/bwjdeoEHVHGCXszwBEjRnD//fczZswYunfvzuLFi7n0\n0ktZvnw5H330EXfccQc//PADY8aM2eq1bdu25dlnn+Woo47il19+oUePHvTq1Yvhw4cHkElwwv4Z\np53cXJgzxx+wjx3rm4OGnJp6hszNN/syTZU+EQlat27+4smVVwYdiUTeN9/4+fUOP1yVvghau3Yt\nt956K48++ijHHnssVapUoVWrVkyYMIGcnBxeeOGFbW6joMLTpEkTjjvuOGbOnJnssCXTVa/uD9q7\ndoUM+H9SxS/FPv4YXnjBt1RJBLXfjgUdQuCivg+Uf2yHt3HHHX6E4Zdf3vF4RLbbjBm+OUwC6fch\nFnQIFfbxxx+zceNG+vbtu8X6OnXq0LNnTyZPnlzhbS1atIhJkyaxxx57JDrMtJJOn38yJDT/gw7y\nv1FpThW/FPrjDxg40Ff6KjtRu4hIstSuDaNG+XEzfv016GgksmbOhI4dg44i0ixBy/ZYvnw5jRs3\nJitr60PT5s2bs3z58m1uo0+fPtSrV49WrVrRtGlTbr311u2MRqSEjh11xS9RzOw0M/vazPLMrFOJ\nx4aa2Twzm2NmPYKKMRGGDoUuXfxIeomSnZ2duI2loajnD9oHyj87Ids5/HA45xy45BI/9ZFIyiXh\nip9+H7Ir9XyXoGV7NG7cmOXLl5Ofn7/VY0uWLKFxBc6Yv/LKK6xZs4b333+fb7/9tkKVxUym///s\nxG2sY0ffGT4vL3HbDEAoKn7ALKAv8H7xlWbWAegHdAB6Ao+bpecYmO++C//5j58wWUQkjIYN86Pj\njxsXdCQSOXl5/qDqwAODjkQC0rVrV2rUqMHLJdqc//7770yaNImjjz56m9so6OPXrVs3zj33XK69\n9tqkxCoR1KCBnzf0+++DjmSHhKLi55yb65ybx9YtBHoD451zm51zOcA8oHOq49tRq1fD+efDyJGJ\nnyhZ7bdjQYcQuKjvA+UfS9i2atb008xcfbWf3kgkZb7/3h9UJbiQ1O9DLOgQKqxevXrcfPPNDBo0\niLfeeovNmzeTk5PDGWecQatWrQqnccjLy2Pjxo2FS24ZQ+xfddVVTJ48mVmzZqUyjVBJp88/GRKe\nfwb08wtFxa8cuwILi91fHF+XVq65xs8XefzxQUciIlK+gw+Gyy6Dv/xFTT4lhdS/T4DrrruOO++8\nkyFDhlC/fn26du1K69ateeedd6hWrRoA48ePp3bt2tSuXZtatWrRvn17wA9hX1zjxo0599xzue22\n21Keh2SoDOjnl7J5/MxsMtC0+Cp8U/AbnXOvxZ8zBbjWOfdF/P4jwCfOuXHx+/8EJjrnthp7Lqxz\nFL3+Ogwa5Fuw1K0bdDQiItu2aZPvj3zJJXDRRUFHUzrN41c5YS0jC91wgx9l6Oabg44ko2mOt8yn\nzziJXnsNHn0U3nor6EjKVV75WDVVQTjnjt2Oly0GWha7v1t8XakGDhxImzZtAGjQoAEdO3Ys7NhZ\ncLk3lfeXL4dBg7IZPx4+/zz176/7uq/7ur899z/6KMagQXDdddkccQT88kvw8c2cOZNVq1YBkJOT\ng2SYmTP9sLIiImFV0NTTOUjPIUdSd8WvIuJX/IY45z6P398HGAt0wTfxnAzsUdppy7Cdzdy8Gbp3\nhx494Kabkvc+sVis8OAoiqKeP2gfKP/k5f/MM/CPf8Bnn4VvPm1d8aucsJWRW2nWzE8m2bLltp9b\nCfp92DJ/XQ3KfMU/Y/3/Jzh/53xf5K++ghYtErfdBCuvfAxFHz8z62NmC4HDgNfNbBKAc242MAGY\nDUwELgt3yVXk73/3rVb+9regIxER2T7nnw+HHAKXXqr+fpJES5b4s6W77RZ0JCIiZTNL+wFeQnXF\nb0eE6WzmG2/4vjFffOFPDIiIpKs//oDOnf0gVRdcEHQ0RXTFr3LCVEZuZdIkGDEC3nkn6Egynq74\nZT59xkl23XV+aocbbww6kjKF/opfJlmwwJ8l/9e/VOkTkfRXpw787//6sTe++iroaDKXmZ1mZl+b\nWZ6ZdSrx2FAzm2dmc8ysR7H1nczsKzP7zsweTH3UCZKEidtFRJIiza/4qeKXQBs3Qr9+MGQIHHFE\nat6zYBCEqIp6/qB9oPxjSX+PDh3ggQfgtNMgPr6KJN4soC/wfvGVZtYB6Ad0AHoCj1vRuPVPABc4\n5/YE9jSz41IYb+IkcSoH/T7Egg5BAhT1zz8p+af5lA6q+CWIc/5KX8uWcO21QUcjIpJYZ5/t5yI9\n/XQ/3YMklnNurnNuHn6qo+J6A+Odc5udcznAPKCzmTUD6jrnpsefNwbok7KAE0lX/EQkXey1Hny8\nfgAAIABJREFUl++XvHp10JFsF/XxS5Bbb/XdFGIxqFUrsDBERJJm82bo3Rt23RWeeirY0awztY9f\nReezBeYDdznnesTXHwFc75w7uYzthrOP39q1fkTP1auhaspmmIos9f/KfPqMU6BLF7j/fujWLehI\nShWKefwy2dixMHo0TJumSp+IZK6qVWH8eF/WjRjhm7VLxZnZZKBp8VWAA250zr2W7PcP21y3ANlV\nq8J++xGbOjWY94/YfYmGsPy/Zez9pk1hwgSy4xW/oON58MEHmTlzZuHve7mccxmx+FRS74MPnNtl\nF+e+/jqQt3dTpkwJ5o1DIur5O6d9oPynpPw9Fy50btddnXv55ZS/daH4b37gZU+iF2AK0KnY/RuA\nvxa7/yZ+bttmwJxi688Enihnuzu6y5PjkUecu+iipG1evw9Ttrgf2v+DYo488kjXsGFDl5ubW7hu\n0aJF7tRTT3WNGzd2DRo0cPvvv78bPXq0c865nJwcZ2aubt26rm7duq5t27bu7rvvDir8wBX/jPX/\nPyU5G37iCefOOy85206A8spH9fHbAXPn+v4uY8fCvvsGHY2ISGrsthu88gpcfDF8+mnQ0WSk4k10\nXgXONLPqZtYWaA985pxbCqw2s87xwV7OAV4JINYdo/59Usz8+fOZOnUqWVlZvPrqq4XrBwwYQOvW\nrVm4cCErVqzg+eefp2nToovnZsbq1atZs2YNL730EsOHD+fdd98NIgWJgjQe2VN9/LbT99/DUUfB\n8OEwcGDK3lZEJDQmToTzzvO3Bx+c2vfOtD5+ZtYHeARoDKwCZjrnesYfGwpcAGwCBjvn3o6vPxgY\nBdQEJjrnBpez/ZSWkRV28MHw2GNw2GFBRxIJYe//NXz4cN5++226dOnC3Llzee013wK6bt26fPTR\nRxxwwAFbvWb+/PnsvvvubNq0iawsfz2jS5cu9OvXj2sjONpe2D/jjLBuHey8s++bXL160NFspbzy\nURW/7fDTT5CdDTfdBBdemJK3FBEJpYIrf2++mbQR+UuVaRW/ZDMz5y67rOBO0W3xJStr69viS5Uq\nRbcFS9WqRUuVKlCtmv+7WjW/VK9etNSoUbTUrOkf33tvWL4catcObudESNgrBXvssQdDhgzh0EMP\n5bDDDmPx4sXssssu9OjRg3Xr1jFo0CAOP/xwWrZsWfiagopfbm4uVapUYdq0aRxzzDGMHTuW3r17\nB5hNMML+GWeMffaBRx6B3XeHDRv8snEj5OYW3ebm+mGwN23yo6MV3Obl+duCv4sv+flbLnl5fuqA\n/Hx/W/Jv2OrWHn+8zPJRg7tU0oIF0L07/PWv4aj0xWKxws6dURT1/EH7QPkHm3/v3r7s6tkTJk+G\n/fYLLBTZln322fIAobSl4ICi+G3BwUd+vj9wKXmgUnAAU7AUHOgULMUPggoOjgpu/+d/klrpC/r7\nEbRK55+oUynbUe+YOnUqCxYsoF+/fjRs2JD27dszbtw4Bg8ezEsvvcQ999zD7bffzrfffsv+++/P\n008/zSGHHOLfzjl22WUXNmzYwMaNG7n22msjWekrSf//Scz/+OP9PEc1a/ql+ImtghNdBSfACpbi\nJ8oKTpZVrbrlCbWsLP/6ghNuZn59aSfpChbY+rYMqvhVwqJFvtJ31VVQcOJURCTqTj3VH9/36AHv\nvOPrFxJCl18edAQSdgFeKBozZgw9evSgYcOGAPTv35/Ro0czePBg6tevz5133smdd97JypUrufba\na+nbty8LFy4E/FWuFStWAPDQQw8xbtw4Nm/eTFVNESLJ8o9/+CWMrriizIfU1LOCvvkGTjwRBg3S\nBO0iIqV54QU/xcPLL8Phhyf3vdTUs3JC28dPUiqszQA3bNhAs2bNyM/Pp06dOgDk5uayatUqZs6c\nyf7777/F87/55hsOOOAAli9fzpo1a7bq49etWzdOP/10rrzyypTnErSwfsaSOprHbwdNmQJnnukr\n9medFXQ0IiLhdPbZ0Lgx9OkDTzzhrwSKiGzLf/7zH6pWrcqXX35JtWrVCtf369eP0aNHU7VqVQYM\nGMDee+/NunXrePzxx2nfvj0NGzZkzZo1W1V0brjhBi666CIuueQSqodw8A2RoGg6h2144QVf6Rs/\nPpyVvqhPyhr1/EH7QPnHgg5hC8cfD2+9BYMHwwMPFHUpEwlC2L4fqZYu+Y8ZM4bzzz+fXXfdlSZN\nmhQul19+OePGjWPt2rX07du3sO/fwoULt5juwUr0azrxxBNp1KgRI0eOTHUqoZIun3+yRD3/0uiK\nXxny8+GOO+CZZ+C99zRPn4hIRR10EHz8MZxwAvz4I4wYEcoRr0UkJCZNmlTq+tNPP53TTz+93Ne2\nbt2avLy8rdbPmjUrIbGJZBL18SvFkiVwzjmwfj1MmAAtWiRksyIikbJqFQwYAMuWwb/+Be3aJW7b\n6uNXOerjJ6D+X1Ggz1jKKx/V1LOESZOgUyc/wnQspkqfiMj2atAAXn3VV/4OOwzGjg06IhERkehS\nxS9u3Tq45ho/EfH48XDrrX5qjbCLevvlqOcP2gfKPxZ0COUy86MhT54Mw4fDuef6K4EiqRD270ey\nRT3/qIv65x/1/EsT+Yqfc/Dii9Chg2/iOWMGHHlk0FGJiGSWjh3h88+hTh3Ye294+mk/97eIiIik\nRqT7+M2Y4UeeW7sWHn4YunVLUnAiIlJo5ky48sod++1VH7/KUR8/AfX/igJ9xqI+fsU450ebO+MM\n6NnTzzv13/+q0icikiodO8L778MNN/hpck480TcF1bGKiIhI8kSm4peb6wcW6NLFj9h5+OHw3Xdw\n0UVQpUrQ0W2/qLdfjnr+oH2g/GNBh7BdzPwJuLlzoW9f38d6//19E9B164KOTjJFun4/EiXq+Udd\n1D//qOdfmoyu+P3yC4wZ4ydgb9bMz8l3003+QGPwYKhXL+gIRUSirVYt+Mtf4Kuv4KGH4PXXoXlz\n6NMHRo6ERYuCjlBERCQzZFQfv7FjHfPmwbx5MHu2nzj46KP9JMLHHw+77hp0lCIisi3Ll8Nbb8HE\nif62WTPYbz/YY4+i5fDD1cevMtTHT0D9v3bEsGHD+P7773n++edZuHAh++67L6tXr8as8j9Dd911\nFz/99BNPP/10wuPUZyzl9fHLqIpfv36u8KBgzz3h4IOhevWgIxMRke2Vl+cHg/n2WwpP7M2bB9On\nq+JXGar4CWRupaBt27Y888wzdO/ePWnvMWzYMH744QfGjBlTqde9//77nH322SxcuDBJkW0pUz9j\nqbjIDO7y4otw++1+nqiuXaNR6Yt6++Wo5w/aB8o/FnQISVWlij+Jd9ZZfn7VsWPhs8+CjkrSRaZ/\nP7Yl6vmXJS+Fc8k457brqmAiRP3zj3r+pcmoip+IiIiIpJ+2bdsyYsQIDjzwQBo2bEj//v3Jzc0t\nfPz111/noIMOomHDhhxxxBHMmjULgHPOOYcFCxbQq1cv6tWrx/3337/Vtt9//31atmzJvffeS/Pm\nzTn//PNZtWoVvXr1okmTJuy888706tWLn3/+ufA1OTk5ZGdnU79+fY477jiWL19e+Nj8+fPJysoi\nPz8fgFGjRrHPPvtQr1492rdvX9iEc926dZxwwgn8/PPP1K1bl3r16rF06VKGDRvGgAEDCrf36quv\nst9++9GoUSO6d+/Ot99+W+H9IlIpzrmMWHwqIiISBfHf/MDLnnRZVEaKc4Xfm1Bq06aN69Kli1u6\ndKn77bffXIcOHdxTTz3lnHPuiy++cE2aNHHTp093+fn5bsyYMa5NmzYuNze38LXvvfdemduOxWKu\natWqbujQoS43N9dt2LDBrVixwr388stuw4YN7vfff3f9+vVzffr0KXxN165d3ZAhQ1xubq774IMP\nXN26dd2AAQOcc87l5OS4rKwsl5eX55xzbuLEie6nn35yzjn3wQcfuNq1a7sZM2YUvnfLli23iOfW\nW28t3NbcuXNdnTp13Lvvvus2b97s7r33Xte+fXu3adOmbe6X0oT5M5bUKK981BU/EREREfHzrCRi\n2U6DBw+madOmNGjQgF69ejFz5kwARo4cySWXXMIhhxyCmTFgwABq1KjBtGnTCl/rj3fLVqVKFYYN\nG0a1atWoUaMGjRo1om/fvtSoUYM6deowdOhQPvjgAwAWLFjAf//7X2677TaqVatGt27d6NWrV5nb\n7tmzJ23atAGgW7du9OjRgw8//LBCOU+YMIGTTjqJ7t27U6VKFYYMGcL69ev5+OOPt7lfRCpLFb80\nF/X2y1HPH7QPlH8s6BBEQivq349K5+9cYpbt1LRp08K/a9euze+//w74ppUjRoygUaNGNGrUiIYN\nG7Jo0aItmmZuyy677EK1atUK769fv56LL76YNm3a0KBBA4488khWrVqFc44lS5bQsGFDatWqVfj8\n1q1bl7ntSZMm0bVrV3beeWcaNmzIpEmTtmgaWp6ff/55i22bGS1btmTx4sWF68raL9ui//9Y0CGE\njip+IiIiIhJaLVu25MYbb2TlypWsXLmS3377jd9//50zzjgDoEKDp5R8zogRI5g3bx7Tp09n1apV\nhVf7nHM0b96c3377jfXr1xc+f8GCBaVuNzc3l9NOO43rr7+eX3/9ld9++42ePXsWXoHcVmwtWrRg\n/vz5W6xbuHAhu+222zZzEqksVfzSXHZ2dtAhBCrq+YP2gfLPDjoEkdCK+vcjU/K/8MILefLJJ/ks\nPqTvH3/8wcSJE/njjz8Af0Xsxx9/rNQ2165dS61atahXrx4rV67k1ltvLXysVatWHHLIIdxyyy1s\n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\nYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f358ccd8ed0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# creating plot figure\n",
    "fig = plt.figure(figsize=(15,10))\n",
    "\n",
    "# Temperature plot\n",
    "ax1 = fig.add_subplot(221)\n",
    "ax1.plot(ebm_model.lat,ebm_model.Ts)\n",
    "\n",
    "ax1.set_xticks([-90,-60,-30,0,30,60,90])\n",
    "ax1.set_xlim([-90,90])\n",
    "ax1.set_title('Surface Temperature', fontsize=14)\n",
    "ax1.set_ylabel('(degC)', fontsize=12)\n",
    "ax1.grid()\n",
    "\n",
    "# Albedo plot\n",
    "ax2 = fig.add_subplot(223, sharex = ax1)\n",
    "ax2.plot(ebm_model.lat,ebm_model.albedo)\n",
    "\n",
    "ax2.set_title('Albedo', fontsize=14)\n",
    "ax2.set_xlabel('latitude', fontsize=10)\n",
    "ax2.set_ylim([0,1])\n",
    "ax2.grid()\n",
    "\n",
    "# Net Radiation plot\n",
    "ax3 = fig.add_subplot(222, sharex = ax1)\n",
    "ax3.plot(ebm_model.lat, ebm_model.OLR, label='OLR',\n",
    "                                       color='cyan')\n",
    "ax3.plot(ebm_model.lat, ebm_model.ASR, label='ASR',\n",
    "                                       color='magenta')\n",
    "ax3.plot(ebm_model.lat, ebm_model.ASR-ebm_model.OLR, \n",
    "                                       label='net radiation',\n",
    "                                       color='red')\n",
    "\n",
    "ax3.set_title('Net Radiation', fontsize=14)\n",
    "ax3.set_ylabel('(W/m$^2$)', fontsize=12)\n",
    "ax3.legend(loc='best')\n",
    "ax3.grid()\n",
    "\n",
    "# Energy Balance plot\n",
    "net_rad = np.squeeze(ebm_model.net_radiation)\n",
    "transport = ebm_model.heat_transport_convergence()\n",
    "\n",
    "ax4 = fig.add_subplot(224, sharex = ax1)\n",
    "ax4.plot(ebm_model.lat, net_rad, label='net radiation', \n",
    "                                              color='red')\n",
    "ax4.plot(ebm_model.lat, transport, label='heat transport', \n",
    "                                              color='blue')\n",
    "ax4.plot(ebm_model.lat, net_rad+transport, label='balance',\n",
    "                                             color='black')\n",
    "\n",
    "ax4.set_title('Energy', fontsize=14)\n",
    "ax4.set_xlabel('latitude', fontsize=10)\n",
    "ax4.set_ylabel('(W/m$^2$)', fontsize=12)\n",
    "ax4.legend(loc='best')\n",
    "ax4.grid()\n",
    "\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The energy balance is zero at every latitude. That means the model is in equilibrium. Perfect!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Global mean temperature"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The model's state dictionary has following entries:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Ts']"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ebm_model.state.keys()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "So the surface temperature can usually be accessed through ``ebm_model.state['Ts']`` but is also availible as a model attribute: ``ebm_model.Ts``"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The global mean of the model's surface temperature can be calculated through"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Field(14.288135944994657)"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# calculate global mean temperature\n",
    "global_mean(ebm_model.Ts)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note that in the **header** the `global_mean` method has been **imported**!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The global mean temperature is 14.29 degC.\n",
      "The modeled ice edge is at 70.0 deg.\n"
     ]
    }
   ],
   "source": [
    "print 'The global mean temperature is %s degC.' \\\n",
    "                               %np.round(global_mean(ebm_model.Ts),2)\n",
    "    \n",
    "print 'The modeled ice edge is at %s deg.' % np.max(ebm_model.icelat)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.11"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
