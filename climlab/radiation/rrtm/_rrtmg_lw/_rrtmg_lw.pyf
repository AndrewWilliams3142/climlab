!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module _rrtmg_lw ! in 
    interface  ! in :_rrtmg_lw
        subroutine f90wrap_parrrtm__get__mxlay(f90wrap_mxlay) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_mxlay=>mxlay
            integer(kind=4) intent(out) :: f90wrap_mxlay
        end subroutine f90wrap_parrrtm__get__mxlay
        subroutine f90wrap_parrrtm__get__mg(f90wrap_mg) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_mg=>mg
            integer(kind=4) intent(out) :: f90wrap_mg
        end subroutine f90wrap_parrrtm__get__mg
        subroutine f90wrap_parrrtm__get__nbndlw(f90wrap_nbndlw) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_nbndlw=>nbndlw
            integer(kind=4) intent(out) :: f90wrap_nbndlw
        end subroutine f90wrap_parrrtm__get__nbndlw
        subroutine f90wrap_parrrtm__get__maxxsec(f90wrap_maxxsec) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_maxxsec=>maxxsec
            integer(kind=4) intent(out) :: f90wrap_maxxsec
        end subroutine f90wrap_parrrtm__get__maxxsec
        subroutine f90wrap_parrrtm__get__mxmol(f90wrap_mxmol) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_mxmol=>mxmol
            integer(kind=4) intent(out) :: f90wrap_mxmol
        end subroutine f90wrap_parrrtm__get__mxmol
        subroutine f90wrap_parrrtm__get__maxinpx(f90wrap_maxinpx) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_maxinpx=>maxinpx
            integer(kind=4) intent(out) :: f90wrap_maxinpx
        end subroutine f90wrap_parrrtm__get__maxinpx
        subroutine f90wrap_parrrtm__get__nmol(f90wrap_nmol) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_nmol=>nmol
            integer(kind=4) intent(out) :: f90wrap_nmol
        end subroutine f90wrap_parrrtm__get__nmol
        subroutine f90wrap_parrrtm__get__ngptlw(f90wrap_ngptlw) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ngptlw=>ngptlw
            integer(kind=4) intent(out) :: f90wrap_ngptlw
        end subroutine f90wrap_parrrtm__get__ngptlw
        subroutine f90wrap_parrrtm__get__ng1(f90wrap_ng1) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ng1=>ng1
            integer(kind=4) intent(out) :: f90wrap_ng1
        end subroutine f90wrap_parrrtm__get__ng1
        subroutine f90wrap_parrrtm__get__ng2(f90wrap_ng2) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ng2=>ng2
            integer(kind=4) intent(out) :: f90wrap_ng2
        end subroutine f90wrap_parrrtm__get__ng2
        subroutine f90wrap_parrrtm__get__ng3(f90wrap_ng3) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ng3=>ng3
            integer(kind=4) intent(out) :: f90wrap_ng3
        end subroutine f90wrap_parrrtm__get__ng3
        subroutine f90wrap_parrrtm__get__ng4(f90wrap_ng4) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ng4=>ng4
            integer(kind=4) intent(out) :: f90wrap_ng4
        end subroutine f90wrap_parrrtm__get__ng4
        subroutine f90wrap_parrrtm__get__ng5(f90wrap_ng5) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ng5=>ng5
            integer(kind=4) intent(out) :: f90wrap_ng5
        end subroutine f90wrap_parrrtm__get__ng5
        subroutine f90wrap_parrrtm__get__ng6(f90wrap_ng6) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ng6=>ng6
            integer(kind=4) intent(out) :: f90wrap_ng6
        end subroutine f90wrap_parrrtm__get__ng6
        subroutine f90wrap_parrrtm__get__ng7(f90wrap_ng7) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ng7=>ng7
            integer(kind=4) intent(out) :: f90wrap_ng7
        end subroutine f90wrap_parrrtm__get__ng7
        subroutine f90wrap_parrrtm__get__ng8(f90wrap_ng8) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ng8=>ng8
            integer(kind=4) intent(out) :: f90wrap_ng8
        end subroutine f90wrap_parrrtm__get__ng8
        subroutine f90wrap_parrrtm__get__ng9(f90wrap_ng9) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ng9=>ng9
            integer(kind=4) intent(out) :: f90wrap_ng9
        end subroutine f90wrap_parrrtm__get__ng9
        subroutine f90wrap_parrrtm__get__ng10(f90wrap_ng10) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ng10=>ng10
            integer(kind=4) intent(out) :: f90wrap_ng10
        end subroutine f90wrap_parrrtm__get__ng10
        subroutine f90wrap_parrrtm__get__ng11(f90wrap_ng11) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ng11=>ng11
            integer(kind=4) intent(out) :: f90wrap_ng11
        end subroutine f90wrap_parrrtm__get__ng11
        subroutine f90wrap_parrrtm__get__ng12(f90wrap_ng12) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ng12=>ng12
            integer(kind=4) intent(out) :: f90wrap_ng12
        end subroutine f90wrap_parrrtm__get__ng12
        subroutine f90wrap_parrrtm__get__ng13(f90wrap_ng13) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ng13=>ng13
            integer(kind=4) intent(out) :: f90wrap_ng13
        end subroutine f90wrap_parrrtm__get__ng13
        subroutine f90wrap_parrrtm__get__ng14(f90wrap_ng14) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ng14=>ng14
            integer(kind=4) intent(out) :: f90wrap_ng14
        end subroutine f90wrap_parrrtm__get__ng14
        subroutine f90wrap_parrrtm__get__ng15(f90wrap_ng15) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ng15=>ng15
            integer(kind=4) intent(out) :: f90wrap_ng15
        end subroutine f90wrap_parrrtm__get__ng15
        subroutine f90wrap_parrrtm__get__ng16(f90wrap_ng16) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ng16=>ng16
            integer(kind=4) intent(out) :: f90wrap_ng16
        end subroutine f90wrap_parrrtm__get__ng16
        subroutine f90wrap_parrrtm__get__ngs1(f90wrap_ngs1) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ngs1=>ngs1
            integer(kind=4) intent(out) :: f90wrap_ngs1
        end subroutine f90wrap_parrrtm__get__ngs1
        subroutine f90wrap_parrrtm__get__ngs2(f90wrap_ngs2) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ngs2=>ngs2
            integer(kind=4) intent(out) :: f90wrap_ngs2
        end subroutine f90wrap_parrrtm__get__ngs2
        subroutine f90wrap_parrrtm__get__ngs3(f90wrap_ngs3) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ngs3=>ngs3
            integer(kind=4) intent(out) :: f90wrap_ngs3
        end subroutine f90wrap_parrrtm__get__ngs3
        subroutine f90wrap_parrrtm__get__ngs4(f90wrap_ngs4) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ngs4=>ngs4
            integer(kind=4) intent(out) :: f90wrap_ngs4
        end subroutine f90wrap_parrrtm__get__ngs4
        subroutine f90wrap_parrrtm__get__ngs5(f90wrap_ngs5) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ngs5=>ngs5
            integer(kind=4) intent(out) :: f90wrap_ngs5
        end subroutine f90wrap_parrrtm__get__ngs5
        subroutine f90wrap_parrrtm__get__ngs6(f90wrap_ngs6) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ngs6=>ngs6
            integer(kind=4) intent(out) :: f90wrap_ngs6
        end subroutine f90wrap_parrrtm__get__ngs6
        subroutine f90wrap_parrrtm__get__ngs7(f90wrap_ngs7) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ngs7=>ngs7
            integer(kind=4) intent(out) :: f90wrap_ngs7
        end subroutine f90wrap_parrrtm__get__ngs7
        subroutine f90wrap_parrrtm__get__ngs8(f90wrap_ngs8) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ngs8=>ngs8
            integer(kind=4) intent(out) :: f90wrap_ngs8
        end subroutine f90wrap_parrrtm__get__ngs8
        subroutine f90wrap_parrrtm__get__ngs9(f90wrap_ngs9) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ngs9=>ngs9
            integer(kind=4) intent(out) :: f90wrap_ngs9
        end subroutine f90wrap_parrrtm__get__ngs9
        subroutine f90wrap_parrrtm__get__ngs10(f90wrap_ngs10) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ngs10=>ngs10
            integer(kind=4) intent(out) :: f90wrap_ngs10
        end subroutine f90wrap_parrrtm__get__ngs10
        subroutine f90wrap_parrrtm__get__ngs11(f90wrap_ngs11) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ngs11=>ngs11
            integer(kind=4) intent(out) :: f90wrap_ngs11
        end subroutine f90wrap_parrrtm__get__ngs11
        subroutine f90wrap_parrrtm__get__ngs12(f90wrap_ngs12) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ngs12=>ngs12
            integer(kind=4) intent(out) :: f90wrap_ngs12
        end subroutine f90wrap_parrrtm__get__ngs12
        subroutine f90wrap_parrrtm__get__ngs13(f90wrap_ngs13) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ngs13=>ngs13
            integer(kind=4) intent(out) :: f90wrap_ngs13
        end subroutine f90wrap_parrrtm__get__ngs13
        subroutine f90wrap_parrrtm__get__ngs14(f90wrap_ngs14) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ngs14=>ngs14
            integer(kind=4) intent(out) :: f90wrap_ngs14
        end subroutine f90wrap_parrrtm__get__ngs14
        subroutine f90wrap_parrrtm__get__ngs15(f90wrap_ngs15) ! in :_rrtmg_lw:f90wrap_parrrtm.f90
            use parrrtm, only: parrrtm_ngs15=>ngs15
            integer(kind=4) intent(out) :: f90wrap_ngs15
        end subroutine f90wrap_parrrtm__get__ngs15
        subroutine f90wrap_mcica_subcol_lw(iplon,ncol,nlay,icld,permuteseed,irng,play,cldfrac,ciwp,clwp,rei,rel,tauc,cldfmcl,ciwpmcl,clwpmcl,reicmcl,relqmcl,taucmcl,n0,n1,n2,n3,n4,n5,n6,n7,n8,n9,n10,n11,n12,n13,n14,n15,n16,n17,n18,n19,n20,n21,n22,n23,n24,n25,n26,n27,n28,n29,n30) ! in :_rrtmg_lw:f90wrap_mcica_subcol_gen_lw.f90
            use mcica_subcol_gen_lw, only: mcica_subcol_lw
            integer(kind=4) intent(in) :: iplon
            integer(kind=4) intent(in) :: ncol
            integer(kind=4) intent(in) :: nlay
            integer(kind=4) intent(in) :: icld
            integer(kind=4) intent(in) :: permuteseed
            integer(kind=4) intent(inout) :: irng
            real(kind=8) dimension(n0,n1),intent(in) :: play
            real(kind=8) dimension(n2,n3),intent(in) :: cldfrac
            real(kind=8) dimension(n4,n5),intent(in) :: ciwp
            real(kind=8) dimension(n6,n7),intent(in) :: clwp
            real(kind=8) dimension(n8,n9),intent(in) :: rei
            real(kind=8) dimension(n10,n11),intent(in) :: rel
            real(kind=8) dimension(n12,n13,n14),intent(in) :: tauc
            real(kind=8) dimension(n15,n16,n17),intent(inout) :: cldfmcl
            real(kind=8) dimension(n18,n19,n20),intent(inout) :: ciwpmcl
            real(kind=8) dimension(n21,n22,n23),intent(inout) :: clwpmcl
            real(kind=8) dimension(n24,n25),intent(inout) :: reicmcl
            real(kind=8) dimension(n26,n27),intent(inout) :: relqmcl
            real(kind=8) dimension(n28,n29,n30),intent(inout) :: taucmcl
            integer, optional,intent(hide),check(shape(play,0)==n0),depend(play) :: n0=shape(play,0)
            integer, optional,intent(hide),check(shape(play,1)==n1),depend(play) :: n1=shape(play,1)
            integer, optional,intent(hide),check(shape(cldfrac,0)==n2),depend(cldfrac) :: n2=shape(cldfrac,0)
            integer, optional,intent(hide),check(shape(cldfrac,1)==n3),depend(cldfrac) :: n3=shape(cldfrac,1)
            integer, optional,intent(hide),check(shape(ciwp,0)==n4),depend(ciwp) :: n4=shape(ciwp,0)
            integer, optional,intent(hide),check(shape(ciwp,1)==n5),depend(ciwp) :: n5=shape(ciwp,1)
            integer, optional,intent(hide),check(shape(clwp,0)==n6),depend(clwp) :: n6=shape(clwp,0)
            integer, optional,intent(hide),check(shape(clwp,1)==n7),depend(clwp) :: n7=shape(clwp,1)
            integer, optional,intent(hide),check(shape(rei,0)==n8),depend(rei) :: n8=shape(rei,0)
            integer, optional,intent(hide),check(shape(rei,1)==n9),depend(rei) :: n9=shape(rei,1)
            integer, optional,intent(hide),check(shape(rel,0)==n10),depend(rel) :: n10=shape(rel,0)
            integer, optional,intent(hide),check(shape(rel,1)==n11),depend(rel) :: n11=shape(rel,1)
            integer, optional,intent(hide),check(shape(tauc,0)==n12),depend(tauc) :: n12=shape(tauc,0)
            integer, optional,intent(hide),check(shape(tauc,1)==n13),depend(tauc) :: n13=shape(tauc,1)
            integer, optional,intent(hide),check(shape(tauc,2)==n14),depend(tauc) :: n14=shape(tauc,2)
            integer, optional,intent(hide),check(shape(cldfmcl,0)==n15),depend(cldfmcl) :: n15=shape(cldfmcl,0)
            integer, optional,intent(hide),check(shape(cldfmcl,1)==n16),depend(cldfmcl) :: n16=shape(cldfmcl,1)
            integer, optional,intent(hide),check(shape(cldfmcl,2)==n17),depend(cldfmcl) :: n17=shape(cldfmcl,2)
            integer, optional,intent(hide),check(shape(ciwpmcl,0)==n18),depend(ciwpmcl) :: n18=shape(ciwpmcl,0)
            integer, optional,intent(hide),check(shape(ciwpmcl,1)==n19),depend(ciwpmcl) :: n19=shape(ciwpmcl,1)
            integer, optional,intent(hide),check(shape(ciwpmcl,2)==n20),depend(ciwpmcl) :: n20=shape(ciwpmcl,2)
            integer, optional,intent(hide),check(shape(clwpmcl,0)==n21),depend(clwpmcl) :: n21=shape(clwpmcl,0)
            integer, optional,intent(hide),check(shape(clwpmcl,1)==n22),depend(clwpmcl) :: n22=shape(clwpmcl,1)
            integer, optional,intent(hide),check(shape(clwpmcl,2)==n23),depend(clwpmcl) :: n23=shape(clwpmcl,2)
            integer, optional,intent(hide),check(shape(reicmcl,0)==n24),depend(reicmcl) :: n24=shape(reicmcl,0)
            integer, optional,intent(hide),check(shape(reicmcl,1)==n25),depend(reicmcl) :: n25=shape(reicmcl,1)
            integer, optional,intent(hide),check(shape(relqmcl,0)==n26),depend(relqmcl) :: n26=shape(relqmcl,0)
            integer, optional,intent(hide),check(shape(relqmcl,1)==n27),depend(relqmcl) :: n27=shape(relqmcl,1)
            integer, optional,intent(hide),check(shape(taucmcl,0)==n28),depend(taucmcl) :: n28=shape(taucmcl,0)
            integer, optional,intent(hide),check(shape(taucmcl,1)==n29),depend(taucmcl) :: n29=shape(taucmcl,1)
            integer, optional,intent(hide),check(shape(taucmcl,2)==n30),depend(taucmcl) :: n30=shape(taucmcl,2)
        end subroutine f90wrap_mcica_subcol_lw
        subroutine f90wrap_generate_stochastic_clouds(ncol,nlay,nsubcol,icld,irng,pmid,cld,clwp,ciwp,tauc,cld_stoch,clwp_stoch,ciwp_stoch,tauc_stoch,changeseed,n0,n1,n2,n3,n4,n5,n6,n7,n8,n9,n10,n11,n12,n13,n14,n15,n16,n17,n18,n19,n20,n21,n22) ! in :_rrtmg_lw:f90wrap_mcica_subcol_gen_lw.f90
            use mcica_subcol_gen_lw, only: generate_stochastic_clouds
            integer(kind=4) intent(in) :: ncol
            integer(kind=4) intent(in) :: nlay
            integer(kind=4) intent(in) :: nsubcol
            integer(kind=4) intent(in) :: icld
            integer(kind=4) intent(inout) :: irng
            real(kind=8) dimension(n0,n1),intent(in) :: pmid
            real(kind=8) dimension(n2,n3),intent(in) :: cld
            real(kind=8) dimension(n4,n5),intent(in) :: clwp
            real(kind=8) dimension(n6,n7),intent(in) :: ciwp
            real(kind=8) dimension(n8,n9,n10),intent(in) :: tauc
            real(kind=8) dimension(n11,n12,n13),intent(inout) :: cld_stoch
            real(kind=8) dimension(n14,n15,n16),intent(inout) :: clwp_stoch
            real(kind=8) dimension(n17,n18,n19),intent(inout) :: ciwp_stoch
            real(kind=8) dimension(n20,n21,n22),intent(inout) :: tauc_stoch
            integer(kind=4), optional,intent(in) :: changeseed
            integer, optional,intent(hide),check(shape(pmid,0)==n0),depend(pmid) :: n0=shape(pmid,0)
            integer, optional,intent(hide),check(shape(pmid,1)==n1),depend(pmid) :: n1=shape(pmid,1)
            integer, optional,intent(hide),check(shape(cld,0)==n2),depend(cld) :: n2=shape(cld,0)
            integer, optional,intent(hide),check(shape(cld,1)==n3),depend(cld) :: n3=shape(cld,1)
            integer, optional,intent(hide),check(shape(clwp,0)==n4),depend(clwp) :: n4=shape(clwp,0)
            integer, optional,intent(hide),check(shape(clwp,1)==n5),depend(clwp) :: n5=shape(clwp,1)
            integer, optional,intent(hide),check(shape(ciwp,0)==n6),depend(ciwp) :: n6=shape(ciwp,0)
            integer, optional,intent(hide),check(shape(ciwp,1)==n7),depend(ciwp) :: n7=shape(ciwp,1)
            integer, optional,intent(hide),check(shape(tauc,0)==n8),depend(tauc) :: n8=shape(tauc,0)
            integer, optional,intent(hide),check(shape(tauc,1)==n9),depend(tauc) :: n9=shape(tauc,1)
            integer, optional,intent(hide),check(shape(tauc,2)==n10),depend(tauc) :: n10=shape(tauc,2)
            integer, optional,intent(hide),check(shape(cld_stoch,0)==n11),depend(cld_stoch) :: n11=shape(cld_stoch,0)
            integer, optional,intent(hide),check(shape(cld_stoch,1)==n12),depend(cld_stoch) :: n12=shape(cld_stoch,1)
            integer, optional,intent(hide),check(shape(cld_stoch,2)==n13),depend(cld_stoch) :: n13=shape(cld_stoch,2)
            integer, optional,intent(hide),check(shape(clwp_stoch,0)==n14),depend(clwp_stoch) :: n14=shape(clwp_stoch,0)
            integer, optional,intent(hide),check(shape(clwp_stoch,1)==n15),depend(clwp_stoch) :: n15=shape(clwp_stoch,1)
            integer, optional,intent(hide),check(shape(clwp_stoch,2)==n16),depend(clwp_stoch) :: n16=shape(clwp_stoch,2)
            integer, optional,intent(hide),check(shape(ciwp_stoch,0)==n17),depend(ciwp_stoch) :: n17=shape(ciwp_stoch,0)
            integer, optional,intent(hide),check(shape(ciwp_stoch,1)==n18),depend(ciwp_stoch) :: n18=shape(ciwp_stoch,1)
            integer, optional,intent(hide),check(shape(ciwp_stoch,2)==n19),depend(ciwp_stoch) :: n19=shape(ciwp_stoch,2)
            integer, optional,intent(hide),check(shape(tauc_stoch,0)==n20),depend(tauc_stoch) :: n20=shape(tauc_stoch,0)
            integer, optional,intent(hide),check(shape(tauc_stoch,1)==n21),depend(tauc_stoch) :: n21=shape(tauc_stoch,1)
            integer, optional,intent(hide),check(shape(tauc_stoch,2)==n22),depend(tauc_stoch) :: n22=shape(tauc_stoch,2)
        end subroutine f90wrap_generate_stochastic_clouds
        subroutine f90wrap_kissvec(seed1,seed2,seed3,seed4,ran_arr,n0,n1,n2,n3,n4) ! in :_rrtmg_lw:f90wrap_mcica_subcol_gen_lw.f90
            use mcica_subcol_gen_lw, only: kissvec
            integer(kind=4) dimension(n0),intent(inout) :: seed1
            integer(kind=4) dimension(n1),intent(inout) :: seed2
            integer(kind=4) dimension(n2),intent(inout) :: seed3
            integer(kind=4) dimension(n3),intent(inout) :: seed4
            real(kind=8) dimension(n4),intent(inout) :: ran_arr
            integer, optional,intent(hide),check(len(seed1)>=n0),depend(seed1) :: n0=len(seed1)
            integer, optional,intent(hide),check(len(seed2)>=n1),depend(seed2) :: n1=len(seed2)
            integer, optional,intent(hide),check(len(seed3)>=n2),depend(seed3) :: n2=len(seed3)
            integer, optional,intent(hide),check(len(seed4)>=n3),depend(seed4) :: n3=len(seed4)
            integer, optional,intent(hide),check(len(ran_arr)>=n4),depend(ran_arr) :: n4=len(ran_arr)
        end subroutine f90wrap_kissvec
        subroutine f90wrap_rrtmg_lw_ini(cpdair) ! in :_rrtmg_lw:f90wrap_rrtmg_lw_init.f90
            use rrtmg_lw_init, only: rrtmg_lw_ini
            real(kind=8) intent(in) :: cpdair
        end subroutine f90wrap_rrtmg_lw_ini
        subroutine f90wrap_lwdatinit(cpdair) ! in :_rrtmg_lw:f90wrap_rrtmg_lw_init.f90
            use rrtmg_lw_init, only: lwdatinit
            real(kind=8) intent(in) :: cpdair
        end subroutine f90wrap_lwdatinit
        subroutine f90wrap_lwcmbdat ! in :_rrtmg_lw:f90wrap_rrtmg_lw_init.f90
            use rrtmg_lw_init, only: lwcmbdat
        end subroutine f90wrap_lwcmbdat
        subroutine f90wrap_cmbgb1 ! in :_rrtmg_lw:f90wrap_rrtmg_lw_init.f90
            use rrtmg_lw_init, only: cmbgb1
        end subroutine f90wrap_cmbgb1
        subroutine f90wrap_cmbgb2 ! in :_rrtmg_lw:f90wrap_rrtmg_lw_init.f90
            use rrtmg_lw_init, only: cmbgb2
        end subroutine f90wrap_cmbgb2
        subroutine f90wrap_cmbgb3 ! in :_rrtmg_lw:f90wrap_rrtmg_lw_init.f90
            use rrtmg_lw_init, only: cmbgb3
        end subroutine f90wrap_cmbgb3
        subroutine f90wrap_cmbgb4 ! in :_rrtmg_lw:f90wrap_rrtmg_lw_init.f90
            use rrtmg_lw_init, only: cmbgb4
        end subroutine f90wrap_cmbgb4
        subroutine f90wrap_cmbgb5 ! in :_rrtmg_lw:f90wrap_rrtmg_lw_init.f90
            use rrtmg_lw_init, only: cmbgb5
        end subroutine f90wrap_cmbgb5
        subroutine f90wrap_cmbgb6 ! in :_rrtmg_lw:f90wrap_rrtmg_lw_init.f90
            use rrtmg_lw_init, only: cmbgb6
        end subroutine f90wrap_cmbgb6
        subroutine f90wrap_cmbgb7 ! in :_rrtmg_lw:f90wrap_rrtmg_lw_init.f90
            use rrtmg_lw_init, only: cmbgb7
        end subroutine f90wrap_cmbgb7
        subroutine f90wrap_cmbgb8 ! in :_rrtmg_lw:f90wrap_rrtmg_lw_init.f90
            use rrtmg_lw_init, only: cmbgb8
        end subroutine f90wrap_cmbgb8
        subroutine f90wrap_cmbgb9 ! in :_rrtmg_lw:f90wrap_rrtmg_lw_init.f90
            use rrtmg_lw_init, only: cmbgb9
        end subroutine f90wrap_cmbgb9
        subroutine f90wrap_cmbgb10 ! in :_rrtmg_lw:f90wrap_rrtmg_lw_init.f90
            use rrtmg_lw_init, only: cmbgb10
        end subroutine f90wrap_cmbgb10
        subroutine f90wrap_cmbgb11 ! in :_rrtmg_lw:f90wrap_rrtmg_lw_init.f90
            use rrtmg_lw_init, only: cmbgb11
        end subroutine f90wrap_cmbgb11
        subroutine f90wrap_cmbgb12 ! in :_rrtmg_lw:f90wrap_rrtmg_lw_init.f90
            use rrtmg_lw_init, only: cmbgb12
        end subroutine f90wrap_cmbgb12
        subroutine f90wrap_cmbgb13 ! in :_rrtmg_lw:f90wrap_rrtmg_lw_init.f90
            use rrtmg_lw_init, only: cmbgb13
        end subroutine f90wrap_cmbgb13
        subroutine f90wrap_cmbgb14 ! in :_rrtmg_lw:f90wrap_rrtmg_lw_init.f90
            use rrtmg_lw_init, only: cmbgb14
        end subroutine f90wrap_cmbgb14
        subroutine f90wrap_cmbgb15 ! in :_rrtmg_lw:f90wrap_rrtmg_lw_init.f90
            use rrtmg_lw_init, only: cmbgb15
        end subroutine f90wrap_cmbgb15
        subroutine f90wrap_cmbgb16 ! in :_rrtmg_lw:f90wrap_rrtmg_lw_init.f90
            use rrtmg_lw_init, only: cmbgb16
        end subroutine f90wrap_cmbgb16
        subroutine f90wrap_lwcldpr ! in :_rrtmg_lw:f90wrap_rrtmg_lw_init.f90
            use rrtmg_lw_init, only: lwcldpr
        end subroutine f90wrap_lwcldpr
        subroutine f90wrap_rrtmg_lw(ncol,nlay,icld,idrv,play,plev,tlay,tlev,tsfc,h2ovmr,o3vmr,co2vmr,ch4vmr,n2ovmr,o2vmr,cfc11vmr,cfc12vmr,cfc22vmr,ccl4vmr,emis,inflglw,iceflglw,liqflglw,cldfmcl,taucmcl,ciwpmcl,clwpmcl,reicmcl,relqmcl,tauaer,uflx,dflx,hr,uflxc,dflxc,hrc,duflx_dt,duflxc_dt,n0,n1,n2,n3,n4,n5,n6,n7,n8,n9,n10,n11,n12,n13,n14,n15,n16,n17,n18,n19,n20,n21,n22,n23,n24,n25,n26,n27,n28,n29,n30,n31,n32,n33,n34,n35,n36,n37,n38,n39,n40,n41,n42,n43,n44,n45,n46,n47,n48,n49,n50,n51,n52,n53,n54,n55,n56,n57,n58,n59,n60,n61,n62,n63,n64,n65) ! in :_rrtmg_lw:f90wrap_rrtmg_lw_rad.f90
            use rrtmg_lw_rad, only: rrtmg_lw
            integer(kind=4) intent(in) :: ncol
            integer(kind=4) intent(in) :: nlay
            integer(kind=4) intent(inout) :: icld
            integer(kind=4) intent(in) :: idrv
            real(kind=8) dimension(n0,n1),intent(in) :: play
            real(kind=8) dimension(n2,n3),intent(in) :: plev
            real(kind=8) dimension(n4,n5),intent(in) :: tlay
            real(kind=8) dimension(n6,n7),intent(in) :: tlev
            real(kind=8) dimension(n8),intent(in) :: tsfc
            real(kind=8) dimension(n9,n10),intent(in) :: h2ovmr
            real(kind=8) dimension(n11,n12),intent(in) :: o3vmr
            real(kind=8) dimension(n13,n14),intent(in) :: co2vmr
            real(kind=8) dimension(n15,n16),intent(in) :: ch4vmr
            real(kind=8) dimension(n17,n18),intent(in) :: n2ovmr
            real(kind=8) dimension(n19,n20),intent(in) :: o2vmr
            real(kind=8) dimension(n21,n22),intent(in) :: cfc11vmr
            real(kind=8) dimension(n23,n24),intent(in) :: cfc12vmr
            real(kind=8) dimension(n25,n26),intent(in) :: cfc22vmr
            real(kind=8) dimension(n27,n28),intent(in) :: ccl4vmr
            real(kind=8) dimension(n29,n30),intent(in) :: emis
            integer(kind=4) intent(in) :: inflglw
            integer(kind=4) intent(in) :: iceflglw
            integer(kind=4) intent(in) :: liqflglw
            real(kind=8) dimension(n31,n32,n33),intent(in) :: cldfmcl
            real(kind=8) dimension(n34,n35,n36),intent(in) :: taucmcl
            real(kind=8) dimension(n37,n38,n39),intent(in) :: ciwpmcl
            real(kind=8) dimension(n40,n41,n42),intent(in) :: clwpmcl
            real(kind=8) dimension(n43,n44),intent(in) :: reicmcl
            real(kind=8) dimension(n45,n46),intent(in) :: relqmcl
            real(kind=8) dimension(n47,n48,n49),intent(in) :: tauaer
            real(kind=8) dimension(n50,n51),intent(inout) :: uflx
            real(kind=8) dimension(n52,n53),intent(inout) :: dflx
            real(kind=8) dimension(n54,n55),intent(inout) :: hr
            real(kind=8) dimension(n56,n57),intent(inout) :: uflxc
            real(kind=8) dimension(n58,n59),intent(inout) :: dflxc
            real(kind=8) dimension(n60,n61),intent(inout) :: hrc
            real(kind=8), optional,dimension(n62,n63),intent(inout) :: duflx_dt
            real(kind=8), optional,dimension(n64,n65),intent(inout) :: duflxc_dt
            integer, optional,intent(hide),check(shape(play,0)==n0),depend(play) :: n0=shape(play,0)
            integer, optional,intent(hide),check(shape(play,1)==n1),depend(play) :: n1=shape(play,1)
            integer, optional,intent(hide),check(shape(plev,0)==n2),depend(plev) :: n2=shape(plev,0)
            integer, optional,intent(hide),check(shape(plev,1)==n3),depend(plev) :: n3=shape(plev,1)
            integer, optional,intent(hide),check(shape(tlay,0)==n4),depend(tlay) :: n4=shape(tlay,0)
            integer, optional,intent(hide),check(shape(tlay,1)==n5),depend(tlay) :: n5=shape(tlay,1)
            integer, optional,intent(hide),check(shape(tlev,0)==n6),depend(tlev) :: n6=shape(tlev,0)
            integer, optional,intent(hide),check(shape(tlev,1)==n7),depend(tlev) :: n7=shape(tlev,1)
            integer, optional,intent(hide),check(len(tsfc)>=n8),depend(tsfc) :: n8=len(tsfc)
            integer, optional,intent(hide),check(shape(h2ovmr,0)==n9),depend(h2ovmr) :: n9=shape(h2ovmr,0)
            integer, optional,intent(hide),check(shape(h2ovmr,1)==n10),depend(h2ovmr) :: n10=shape(h2ovmr,1)
            integer, optional,intent(hide),check(shape(o3vmr,0)==n11),depend(o3vmr) :: n11=shape(o3vmr,0)
            integer, optional,intent(hide),check(shape(o3vmr,1)==n12),depend(o3vmr) :: n12=shape(o3vmr,1)
            integer, optional,intent(hide),check(shape(co2vmr,0)==n13),depend(co2vmr) :: n13=shape(co2vmr,0)
            integer, optional,intent(hide),check(shape(co2vmr,1)==n14),depend(co2vmr) :: n14=shape(co2vmr,1)
            integer, optional,intent(hide),check(shape(ch4vmr,0)==n15),depend(ch4vmr) :: n15=shape(ch4vmr,0)
            integer, optional,intent(hide),check(shape(ch4vmr,1)==n16),depend(ch4vmr) :: n16=shape(ch4vmr,1)
            integer, optional,intent(hide),check(shape(n2ovmr,0)==n17),depend(n2ovmr) :: n17=shape(n2ovmr,0)
            integer, optional,intent(hide),check(shape(n2ovmr,1)==n18),depend(n2ovmr) :: n18=shape(n2ovmr,1)
            integer, optional,intent(hide),check(shape(o2vmr,0)==n19),depend(o2vmr) :: n19=shape(o2vmr,0)
            integer, optional,intent(hide),check(shape(o2vmr,1)==n20),depend(o2vmr) :: n20=shape(o2vmr,1)
            integer, optional,intent(hide),check(shape(cfc11vmr,0)==n21),depend(cfc11vmr) :: n21=shape(cfc11vmr,0)
            integer, optional,intent(hide),check(shape(cfc11vmr,1)==n22),depend(cfc11vmr) :: n22=shape(cfc11vmr,1)
            integer, optional,intent(hide),check(shape(cfc12vmr,0)==n23),depend(cfc12vmr) :: n23=shape(cfc12vmr,0)
            integer, optional,intent(hide),check(shape(cfc12vmr,1)==n24),depend(cfc12vmr) :: n24=shape(cfc12vmr,1)
            integer, optional,intent(hide),check(shape(cfc22vmr,0)==n25),depend(cfc22vmr) :: n25=shape(cfc22vmr,0)
            integer, optional,intent(hide),check(shape(cfc22vmr,1)==n26),depend(cfc22vmr) :: n26=shape(cfc22vmr,1)
            integer, optional,intent(hide),check(shape(ccl4vmr,0)==n27),depend(ccl4vmr) :: n27=shape(ccl4vmr,0)
            integer, optional,intent(hide),check(shape(ccl4vmr,1)==n28),depend(ccl4vmr) :: n28=shape(ccl4vmr,1)
            integer, optional,intent(hide),check(shape(emis,0)==n29),depend(emis) :: n29=shape(emis,0)
            integer, optional,intent(hide),check(shape(emis,1)==n30),depend(emis) :: n30=shape(emis,1)
            integer, optional,intent(hide),check(shape(cldfmcl,0)==n31),depend(cldfmcl) :: n31=shape(cldfmcl,0)
            integer, optional,intent(hide),check(shape(cldfmcl,1)==n32),depend(cldfmcl) :: n32=shape(cldfmcl,1)
            integer, optional,intent(hide),check(shape(cldfmcl,2)==n33),depend(cldfmcl) :: n33=shape(cldfmcl,2)
            integer, optional,intent(hide),check(shape(taucmcl,0)==n34),depend(taucmcl) :: n34=shape(taucmcl,0)
            integer, optional,intent(hide),check(shape(taucmcl,1)==n35),depend(taucmcl) :: n35=shape(taucmcl,1)
            integer, optional,intent(hide),check(shape(taucmcl,2)==n36),depend(taucmcl) :: n36=shape(taucmcl,2)
            integer, optional,intent(hide),check(shape(ciwpmcl,0)==n37),depend(ciwpmcl) :: n37=shape(ciwpmcl,0)
            integer, optional,intent(hide),check(shape(ciwpmcl,1)==n38),depend(ciwpmcl) :: n38=shape(ciwpmcl,1)
            integer, optional,intent(hide),check(shape(ciwpmcl,2)==n39),depend(ciwpmcl) :: n39=shape(ciwpmcl,2)
            integer, optional,intent(hide),check(shape(clwpmcl,0)==n40),depend(clwpmcl) :: n40=shape(clwpmcl,0)
            integer, optional,intent(hide),check(shape(clwpmcl,1)==n41),depend(clwpmcl) :: n41=shape(clwpmcl,1)
            integer, optional,intent(hide),check(shape(clwpmcl,2)==n42),depend(clwpmcl) :: n42=shape(clwpmcl,2)
            integer, optional,intent(hide),check(shape(reicmcl,0)==n43),depend(reicmcl) :: n43=shape(reicmcl,0)
            integer, optional,intent(hide),check(shape(reicmcl,1)==n44),depend(reicmcl) :: n44=shape(reicmcl,1)
            integer, optional,intent(hide),check(shape(relqmcl,0)==n45),depend(relqmcl) :: n45=shape(relqmcl,0)
            integer, optional,intent(hide),check(shape(relqmcl,1)==n46),depend(relqmcl) :: n46=shape(relqmcl,1)
            integer, optional,intent(hide),check(shape(tauaer,0)==n47),depend(tauaer) :: n47=shape(tauaer,0)
            integer, optional,intent(hide),check(shape(tauaer,1)==n48),depend(tauaer) :: n48=shape(tauaer,1)
            integer, optional,intent(hide),check(shape(tauaer,2)==n49),depend(tauaer) :: n49=shape(tauaer,2)
            integer, optional,intent(hide),check(shape(uflx,0)==n50),depend(uflx) :: n50=shape(uflx,0)
            integer, optional,intent(hide),check(shape(uflx,1)==n51),depend(uflx) :: n51=shape(uflx,1)
            integer, optional,intent(hide),check(shape(dflx,0)==n52),depend(dflx) :: n52=shape(dflx,0)
            integer, optional,intent(hide),check(shape(dflx,1)==n53),depend(dflx) :: n53=shape(dflx,1)
            integer, optional,intent(hide),check(shape(hr,0)==n54),depend(hr) :: n54=shape(hr,0)
            integer, optional,intent(hide),check(shape(hr,1)==n55),depend(hr) :: n55=shape(hr,1)
            integer, optional,intent(hide),check(shape(uflxc,0)==n56),depend(uflxc) :: n56=shape(uflxc,0)
            integer, optional,intent(hide),check(shape(uflxc,1)==n57),depend(uflxc) :: n57=shape(uflxc,1)
            integer, optional,intent(hide),check(shape(dflxc,0)==n58),depend(dflxc) :: n58=shape(dflxc,0)
            integer, optional,intent(hide),check(shape(dflxc,1)==n59),depend(dflxc) :: n59=shape(dflxc,1)
            integer, optional,intent(hide),check(shape(hrc,0)==n60),depend(hrc) :: n60=shape(hrc,0)
            integer, optional,intent(hide),check(shape(hrc,1)==n61),depend(hrc) :: n61=shape(hrc,1)
            integer, optional,intent(hide),check(shape(duflx_dt,0)==n62),depend(duflx_dt) :: n62=shape(duflx_dt,0)
            integer, optional,intent(hide),check(shape(duflx_dt,1)==n63),depend(duflx_dt) :: n63=shape(duflx_dt,1)
            integer, optional,intent(hide),check(shape(duflxc_dt,0)==n64),depend(duflxc_dt) :: n64=shape(duflxc_dt,0)
            integer, optional,intent(hide),check(shape(duflxc_dt,1)==n65),depend(duflxc_dt) :: n65=shape(duflxc_dt,1)
        end subroutine f90wrap_rrtmg_lw
        subroutine f90wrap_inatm(iplon,nlay,icld,iaer,play,plev,tlay,tlev,tsfc,h2ovmr,o3vmr,co2vmr,ch4vmr,n2ovmr,o2vmr,cfc11vmr,cfc12vmr,cfc22vmr,ccl4vmr,emis,inflglw,iceflglw,liqflglw,cldfmcl,taucmcl,ciwpmcl,clwpmcl,reicmcl,relqmcl,tauaer,nlayers,pavel,pz,tavel,tz,tbound,semiss,coldry,wkl,wbrodl,wx,pwvcm,inflag,iceflag,liqflag,cldfmc,taucmc,ciwpmc,clwpmc,reicmc,relqmc,taua,n0,n1,n2,n3,n4,n5,n6,n7,n8,n9,n10,n11,n12,n13,n14,n15,n16,n17,n18,n19,n20,n21,n22,n23,n24,n25,n26,n27,n28,n29,n30,n31,n32,n33,n34,n35,n36,n37,n38,n39,n40,n41,n42,n43,n44,n45,n46,n47,n48,n49,n50,n51,n52,n53,n54,n55,n56,n57,n58,n59,n60,n61,n62,n63,n64,n65,n66,n67,n68,n69,n70,n71,n72) ! in :_rrtmg_lw:f90wrap_rrtmg_lw_rad.f90
            use rrtmg_lw_rad, only: inatm
            integer(kind=4) intent(in) :: iplon
            integer(kind=4) intent(in) :: nlay
            integer(kind=4) intent(in) :: icld
            integer(kind=4) intent(in) :: iaer
            real(kind=8) dimension(n0,n1),intent(in) :: play
            real(kind=8) dimension(n2,n3),intent(in) :: plev
            real(kind=8) dimension(n4,n5),intent(in) :: tlay
            real(kind=8) dimension(n6,n7),intent(in) :: tlev
            real(kind=8) dimension(n8),intent(in) :: tsfc
            real(kind=8) dimension(n9,n10),intent(in) :: h2ovmr
            real(kind=8) dimension(n11,n12),intent(in) :: o3vmr
            real(kind=8) dimension(n13,n14),intent(in) :: co2vmr
            real(kind=8) dimension(n15,n16),intent(in) :: ch4vmr
            real(kind=8) dimension(n17,n18),intent(in) :: n2ovmr
            real(kind=8) dimension(n19,n20),intent(in) :: o2vmr
            real(kind=8) dimension(n21,n22),intent(in) :: cfc11vmr
            real(kind=8) dimension(n23,n24),intent(in) :: cfc12vmr
            real(kind=8) dimension(n25,n26),intent(in) :: cfc22vmr
            real(kind=8) dimension(n27,n28),intent(in) :: ccl4vmr
            real(kind=8) dimension(n29,n30),intent(in) :: emis
            integer(kind=4) intent(in) :: inflglw
            integer(kind=4) intent(in) :: iceflglw
            integer(kind=4) intent(in) :: liqflglw
            real(kind=8) dimension(n31,n32,n33),intent(in) :: cldfmcl
            real(kind=8) dimension(n34,n35,n36),intent(in) :: taucmcl
            real(kind=8) dimension(n37,n38,n39),intent(in) :: ciwpmcl
            real(kind=8) dimension(n40,n41,n42),intent(in) :: clwpmcl
            real(kind=8) dimension(n43,n44),intent(in) :: reicmcl
            real(kind=8) dimension(n45,n46),intent(in) :: relqmcl
            real(kind=8) dimension(n47,n48,n49),intent(in) :: tauaer
            integer(kind=4) intent(out) :: nlayers
            real(kind=8) dimension(n50),intent(inout) :: pavel
            real(kind=8) dimension(n51),intent(inout) :: pz
            real(kind=8) dimension(n52),intent(inout) :: tavel
            real(kind=8) dimension(n53),intent(inout) :: tz
            real(kind=8) intent(out) :: tbound
            real(kind=8) dimension(n54),intent(inout) :: semiss
            real(kind=8) dimension(n55),intent(inout) :: coldry
            real(kind=8) dimension(n56,n57),intent(inout) :: wkl
            real(kind=8) dimension(n58),intent(inout) :: wbrodl
            real(kind=8) dimension(n59,n60),intent(inout) :: wx
            real(kind=8) intent(out) :: pwvcm
            integer(kind=4) intent(out) :: inflag
            integer(kind=4) intent(out) :: iceflag
            integer(kind=4) intent(out) :: liqflag
            real(kind=8) dimension(n61,n62),intent(inout) :: cldfmc
            real(kind=8) dimension(n63,n64),intent(inout) :: taucmc
            real(kind=8) dimension(n65,n66),intent(inout) :: ciwpmc
            real(kind=8) dimension(n67,n68),intent(inout) :: clwpmc
            real(kind=8) dimension(n69),intent(inout) :: reicmc
            real(kind=8) dimension(n70),intent(inout) :: relqmc
            real(kind=8) dimension(n71,n72),intent(inout) :: taua
            integer, optional,intent(hide),check(shape(play,0)==n0),depend(play) :: n0=shape(play,0)
            integer, optional,intent(hide),check(shape(play,1)==n1),depend(play) :: n1=shape(play,1)
            integer, optional,intent(hide),check(shape(plev,0)==n2),depend(plev) :: n2=shape(plev,0)
            integer, optional,intent(hide),check(shape(plev,1)==n3),depend(plev) :: n3=shape(plev,1)
            integer, optional,intent(hide),check(shape(tlay,0)==n4),depend(tlay) :: n4=shape(tlay,0)
            integer, optional,intent(hide),check(shape(tlay,1)==n5),depend(tlay) :: n5=shape(tlay,1)
            integer, optional,intent(hide),check(shape(tlev,0)==n6),depend(tlev) :: n6=shape(tlev,0)
            integer, optional,intent(hide),check(shape(tlev,1)==n7),depend(tlev) :: n7=shape(tlev,1)
            integer, optional,intent(hide),check(len(tsfc)>=n8),depend(tsfc) :: n8=len(tsfc)
            integer, optional,intent(hide),check(shape(h2ovmr,0)==n9),depend(h2ovmr) :: n9=shape(h2ovmr,0)
            integer, optional,intent(hide),check(shape(h2ovmr,1)==n10),depend(h2ovmr) :: n10=shape(h2ovmr,1)
            integer, optional,intent(hide),check(shape(o3vmr,0)==n11),depend(o3vmr) :: n11=shape(o3vmr,0)
            integer, optional,intent(hide),check(shape(o3vmr,1)==n12),depend(o3vmr) :: n12=shape(o3vmr,1)
            integer, optional,intent(hide),check(shape(co2vmr,0)==n13),depend(co2vmr) :: n13=shape(co2vmr,0)
            integer, optional,intent(hide),check(shape(co2vmr,1)==n14),depend(co2vmr) :: n14=shape(co2vmr,1)
            integer, optional,intent(hide),check(shape(ch4vmr,0)==n15),depend(ch4vmr) :: n15=shape(ch4vmr,0)
            integer, optional,intent(hide),check(shape(ch4vmr,1)==n16),depend(ch4vmr) :: n16=shape(ch4vmr,1)
            integer, optional,intent(hide),check(shape(n2ovmr,0)==n17),depend(n2ovmr) :: n17=shape(n2ovmr,0)
            integer, optional,intent(hide),check(shape(n2ovmr,1)==n18),depend(n2ovmr) :: n18=shape(n2ovmr,1)
            integer, optional,intent(hide),check(shape(o2vmr,0)==n19),depend(o2vmr) :: n19=shape(o2vmr,0)
            integer, optional,intent(hide),check(shape(o2vmr,1)==n20),depend(o2vmr) :: n20=shape(o2vmr,1)
            integer, optional,intent(hide),check(shape(cfc11vmr,0)==n21),depend(cfc11vmr) :: n21=shape(cfc11vmr,0)
            integer, optional,intent(hide),check(shape(cfc11vmr,1)==n22),depend(cfc11vmr) :: n22=shape(cfc11vmr,1)
            integer, optional,intent(hide),check(shape(cfc12vmr,0)==n23),depend(cfc12vmr) :: n23=shape(cfc12vmr,0)
            integer, optional,intent(hide),check(shape(cfc12vmr,1)==n24),depend(cfc12vmr) :: n24=shape(cfc12vmr,1)
            integer, optional,intent(hide),check(shape(cfc22vmr,0)==n25),depend(cfc22vmr) :: n25=shape(cfc22vmr,0)
            integer, optional,intent(hide),check(shape(cfc22vmr,1)==n26),depend(cfc22vmr) :: n26=shape(cfc22vmr,1)
            integer, optional,intent(hide),check(shape(ccl4vmr,0)==n27),depend(ccl4vmr) :: n27=shape(ccl4vmr,0)
            integer, optional,intent(hide),check(shape(ccl4vmr,1)==n28),depend(ccl4vmr) :: n28=shape(ccl4vmr,1)
            integer, optional,intent(hide),check(shape(emis,0)==n29),depend(emis) :: n29=shape(emis,0)
            integer, optional,intent(hide),check(shape(emis,1)==n30),depend(emis) :: n30=shape(emis,1)
            integer, optional,intent(hide),check(shape(cldfmcl,0)==n31),depend(cldfmcl) :: n31=shape(cldfmcl,0)
            integer, optional,intent(hide),check(shape(cldfmcl,1)==n32),depend(cldfmcl) :: n32=shape(cldfmcl,1)
            integer, optional,intent(hide),check(shape(cldfmcl,2)==n33),depend(cldfmcl) :: n33=shape(cldfmcl,2)
            integer, optional,intent(hide),check(shape(taucmcl,0)==n34),depend(taucmcl) :: n34=shape(taucmcl,0)
            integer, optional,intent(hide),check(shape(taucmcl,1)==n35),depend(taucmcl) :: n35=shape(taucmcl,1)
            integer, optional,intent(hide),check(shape(taucmcl,2)==n36),depend(taucmcl) :: n36=shape(taucmcl,2)
            integer, optional,intent(hide),check(shape(ciwpmcl,0)==n37),depend(ciwpmcl) :: n37=shape(ciwpmcl,0)
            integer, optional,intent(hide),check(shape(ciwpmcl,1)==n38),depend(ciwpmcl) :: n38=shape(ciwpmcl,1)
            integer, optional,intent(hide),check(shape(ciwpmcl,2)==n39),depend(ciwpmcl) :: n39=shape(ciwpmcl,2)
            integer, optional,intent(hide),check(shape(clwpmcl,0)==n40),depend(clwpmcl) :: n40=shape(clwpmcl,0)
            integer, optional,intent(hide),check(shape(clwpmcl,1)==n41),depend(clwpmcl) :: n41=shape(clwpmcl,1)
            integer, optional,intent(hide),check(shape(clwpmcl,2)==n42),depend(clwpmcl) :: n42=shape(clwpmcl,2)
            integer, optional,intent(hide),check(shape(reicmcl,0)==n43),depend(reicmcl) :: n43=shape(reicmcl,0)
            integer, optional,intent(hide),check(shape(reicmcl,1)==n44),depend(reicmcl) :: n44=shape(reicmcl,1)
            integer, optional,intent(hide),check(shape(relqmcl,0)==n45),depend(relqmcl) :: n45=shape(relqmcl,0)
            integer, optional,intent(hide),check(shape(relqmcl,1)==n46),depend(relqmcl) :: n46=shape(relqmcl,1)
            integer, optional,intent(hide),check(shape(tauaer,0)==n47),depend(tauaer) :: n47=shape(tauaer,0)
            integer, optional,intent(hide),check(shape(tauaer,1)==n48),depend(tauaer) :: n48=shape(tauaer,1)
            integer, optional,intent(hide),check(shape(tauaer,2)==n49),depend(tauaer) :: n49=shape(tauaer,2)
            integer, optional,intent(hide),check(len(pavel)>=n50),depend(pavel) :: n50=len(pavel)
            integer, optional,intent(hide),check(len(pz)>=n51),depend(pz) :: n51=len(pz)
            integer, optional,intent(hide),check(len(tavel)>=n52),depend(tavel) :: n52=len(tavel)
            integer, optional,intent(hide),check(len(tz)>=n53),depend(tz) :: n53=len(tz)
            integer, optional,intent(hide),check(len(semiss)>=n54),depend(semiss) :: n54=len(semiss)
            integer, optional,intent(hide),check(len(coldry)>=n55),depend(coldry) :: n55=len(coldry)
            integer, optional,intent(hide),check(shape(wkl,0)==n56),depend(wkl) :: n56=shape(wkl,0)
            integer, optional,intent(hide),check(shape(wkl,1)==n57),depend(wkl) :: n57=shape(wkl,1)
            integer, optional,intent(hide),check(len(wbrodl)>=n58),depend(wbrodl) :: n58=len(wbrodl)
            integer, optional,intent(hide),check(shape(wx,0)==n59),depend(wx) :: n59=shape(wx,0)
            integer, optional,intent(hide),check(shape(wx,1)==n60),depend(wx) :: n60=shape(wx,1)
            integer, optional,intent(hide),check(shape(cldfmc,0)==n61),depend(cldfmc) :: n61=shape(cldfmc,0)
            integer, optional,intent(hide),check(shape(cldfmc,1)==n62),depend(cldfmc) :: n62=shape(cldfmc,1)
            integer, optional,intent(hide),check(shape(taucmc,0)==n63),depend(taucmc) :: n63=shape(taucmc,0)
            integer, optional,intent(hide),check(shape(taucmc,1)==n64),depend(taucmc) :: n64=shape(taucmc,1)
            integer, optional,intent(hide),check(shape(ciwpmc,0)==n65),depend(ciwpmc) :: n65=shape(ciwpmc,0)
            integer, optional,intent(hide),check(shape(ciwpmc,1)==n66),depend(ciwpmc) :: n66=shape(ciwpmc,1)
            integer, optional,intent(hide),check(shape(clwpmc,0)==n67),depend(clwpmc) :: n67=shape(clwpmc,0)
            integer, optional,intent(hide),check(shape(clwpmc,1)==n68),depend(clwpmc) :: n68=shape(clwpmc,1)
            integer, optional,intent(hide),check(len(reicmc)>=n69),depend(reicmc) :: n69=len(reicmc)
            integer, optional,intent(hide),check(len(relqmc)>=n70),depend(relqmc) :: n70=len(relqmc)
            integer, optional,intent(hide),check(shape(taua,0)==n71),depend(taua) :: n71=shape(taua,0)
            integer, optional,intent(hide),check(shape(taua,1)==n72),depend(taua) :: n72=shape(taua,1)
        end subroutine f90wrap_inatm
    end interface 
end python module _rrtmg_lw

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
